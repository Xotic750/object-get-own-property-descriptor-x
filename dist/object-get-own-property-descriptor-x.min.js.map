{"version":3,"sources":["webpack://objectGetOwnPropertyDescriptorX/webpack/universalModuleDefinition","webpack://objectGetOwnPropertyDescriptorX/webpack/bootstrap","webpack://objectGetOwnPropertyDescriptorX/./node_modules/is-symbol/index.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/is-primitive/index.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/cached-constructors-x/index.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/white-space-x/index.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/to-number-x/index.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/validate.io-undefined/lib/index.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/trim-left-x/index.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/require-coercible-to-string-x/index.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/to-string-x/index.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/is-nan-x/index.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/is-date-object/index.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/to-boolean-x/index.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/lodash.isnull/index.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/trim-x/index.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/require-object-coercible-x/index.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/is-nil-x/index.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/nan-x/index.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/is-string/index.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/is-index-x/index.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/has-symbols/index.js","webpack://objectGetOwnPropertyDescriptorX/(webpack)/buildin/global.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/has-symbols/shams.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/to-string-symbols-supported-x/index.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/to-string-symbols-supported-x/node_modules/has-symbol-support-x/index.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/to-integer-x/index.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/to-primitive-x/index.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/to-primitive-x/node_modules/has-symbol-support-x/index.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/to-primitive-x/node_modules/is-primitive/index.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/is-function-x/index.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/is-function-x/node_modules/attempt-x/index.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/is-function-x/node_modules/is-falsey-x/index.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/to-string-tag-x/index.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/has-to-string-tag-x/index.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/has-to-string-tag-x/node_modules/has-symbol-support-x/index.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/is-function-x/node_modules/is-primitive/index.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/normalize-space-x/index.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/trim-right-x/index.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/replace-comments-x/index.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/parse-int-x/index.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/is-finite-x/index.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/infinity-x/index.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/math-sign-x/index.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/math-clamp-x/index.js","webpack://objectGetOwnPropertyDescriptorX/./node_modules/max-safe-integer/index.js","webpack://objectGetOwnPropertyDescriptorX/../src/to-object-x.js","webpack://objectGetOwnPropertyDescriptorX/../src/require-object-coercible-x.js","webpack://objectGetOwnPropertyDescriptorX/../src/is-nil-x.js","webpack://objectGetOwnPropertyDescriptorX/../src/attempt-x.js","webpack://objectGetOwnPropertyDescriptorX/../src/has-symbol-support-x.js","webpack://objectGetOwnPropertyDescriptorX/../src/is-falsey-x.js","webpack://objectGetOwnPropertyDescriptorX/../src/to-boolean-x.js","webpack://objectGetOwnPropertyDescriptorX/../src/to-string-tag-x.js","webpack://objectGetOwnPropertyDescriptorX/../src/has-to-string-tag-x.js","webpack://objectGetOwnPropertyDescriptorX/../src/to-string-x.js","webpack://objectGetOwnPropertyDescriptorX/../src/require-coercible-to-string-x.js","webpack://objectGetOwnPropertyDescriptorX/../src/white-space-x.js","webpack://objectGetOwnPropertyDescriptorX/../src/trim-left-x.js","webpack://objectGetOwnPropertyDescriptorX/../src/trim-right-x.js","webpack://objectGetOwnPropertyDescriptorX/../src/trim-x.js","webpack://objectGetOwnPropertyDescriptorX/../src/normalize-space-x.js","webpack://objectGetOwnPropertyDescriptorX/../src/replace-comments-x.js","webpack://objectGetOwnPropertyDescriptorX/../src/is-function-x.js","webpack://objectGetOwnPropertyDescriptorX/../src/to-primitive-x.js","webpack://objectGetOwnPropertyDescriptorX/../src/to-property-key-x.js","webpack://objectGetOwnPropertyDescriptorX/../src/has-own-property-x.js","webpack://objectGetOwnPropertyDescriptorX/../src/property-is-enumerable-x.js","webpack://objectGetOwnPropertyDescriptorX/../src/object-get-own-property-descriptor-x.js"],"names":["root","factory","exports","module","define","amd","self","window","global","Function","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","toStr","toString","symToStr","symStringRegex","valueOf","test","isSymbolObject","e","val","Array","constructor","Boolean","Number","RegExp","String","list","code","description","es5","es2015","es2016","es2017","es2018","string","stringES2016","stringES2018","length","string5","string2015","string2016","string2017","string2018","cachedCtrs","castNumber","Rx","toPrimitive","libTrim","trim2016","trim2018","libParseInt","$parseInt2016","parseInt2016","$parseInt2018","parseInt2018","pStrSlice","slice","NAN","binaryRegex","isBinary","octalRegex","isOctal","nonWSregex2016","nonWSregex2018","invalidHexLiteral","isInvalidHexLiteral","$toNumber2018","toNumber2018","argument","TypeError","hasNonWS2018","trimmed","toNumber","toNumber2016","hasNonWS2016","requireCoercibleToString","reLeft2016","reLeft2018","replace","$trimLeft2018","trimLeft","trimLeft2016","trimLeft2018","requireObjectCoercible","castString","isSymbol","getDay","Date","hasToStringTag","tryDateObject","libTrimLeft","libTrimRight","trimRight2016","trimRight2018","$trim2018","trim","isNil","isUndefined","isNull","strValue","tryStringObject","safeToString","toInteger","toInteger2018","mathClamp","MAX_SAFE_INTEGER","reIsUint","rxTest","number","arguments","origSymbol","hasSymbolSham","g","this","getOwnPropertySymbols","iterator","obj","sym","symObj","keys","getOwnPropertyNames","syms","propertyIsEnumerable","getOwnPropertyDescriptor","descriptor","pToString","libToNumber","numberIsNaN","numberIsFinite","libMathSign","mathSign2016","sign2016","mathSign2018","sign2018","mathFloor","Math","floor","mathAbs","abs","$toInteger2018","toInteger2016","hasSymbols","isPrimitive","isDate","isFunction","symToPrimitive","symValueOf","toStringOrder","toNumberOrder","ordinaryToPrimitive","O","hint","method","result","methodNames","getMethod","P","func","input","preferredType","exoticToPrim","attempt","fToString","toBoolean","isFalsey","normalise","normalizeSpace","deComment","genTag","ctrRx","hasNativeClass","threw","testClassstring","isES6ClassFn","tryFuncToString","allowClass","strTag","getArgs","args","array","argLength","index","fn","apply","libWhiteSpace","reNormalize2016","reNormalize2018","$normalizeSpace2018","normalizeSpace2016","normalizeSpace2018","reRight2016","reRight2018","$trimRight2018","trimRight","STRIP_COMMENTS","nativeParseInt","parseInt","chachedCtrs","charAt","hexRegex","radix","str","INFINITY","$sign2018","x","sign","argsLength","max","min","RangeError","castObject","toObject","concat","_len","_key","hasSymbolSupport","_newArrowCheck","is_symbol_default","undefined","has_symbol_support_x_esm","to_boolean_x_esm_toBoolean","nativeObjectToString","has_to_string_tag_x_esm","is_nil_x_esm_isNil","require_object_coercible_x_esm_requireObjectCoercible","ERROR_MESSAGE","ToString","white_space_x_esm_length","white_space_x_esm_i","white_space_x_esm","EMPTY_STRING","RegExpCtr","reLeft","trim_right_x_esm_EMPTY_STRING","trim_right_x_esm_RegExpCtr","trim_right_x_esm_replace","SPACE","normalize_space_x_esm_RegExpCtr","normalize_space_x_esm_replace","replace_comments_x_esm_EMPTY_STRING","replace_comments_x_esm_replace","funcTag","asyncTag","is_function_x_esm_newArrowCheck","replacement","replaceComments","is_primitive_default","ONE","NUMBER","STRING","DEFAULT","StringCtr","NumberCtr","ordinary","getHint","supplied","to_primitive_x_esm_getExoticToPrim","toPropertyKey","newHint","is_date_object_default","_typeof","hop","has_own_property_x_esm_hasOwnProperty","propIsEnumerable","getOPDFallback1","getOPDFallback2","$getOwnPropertyDescriptor","object_get_own_property_descriptor_x_esm_castObject","nativeGOPD","object_get_own_property_descriptor_x_esm_doesGOPDWork","prop","testResult","doc","document","createElement","res","worksWithPrim","lookupGetter","lookupSetter","prototypeOfObject","supportsAccessors","lg","__lookupGetter__","ls","__lookupSetter__","propKey","isStringIndex","is_string_default","is_index_x_default","configurable","__proto__","notPrototypeOfObject","setter","set","writable","gOPS","__webpack_exports__"],"mappings":"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","file":"object-get-own-property-descriptor-x.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"objectGetOwnPropertyDescriptorX\"] = factory();\n\telse\n\t\troot[\"objectGetOwnPropertyDescriptorX\"] = factory();\n})((function () {\n  'use strict';\n\n  if (typeof self !== 'undefined') {\n    return self;\n  }\n\n  if (typeof window !== 'undefined') {\n    return window;\n  }\n\n  if (typeof global !== 'undefined') {\n    return global;\n  }\n\n  return Function('return this')();\n}()), function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 44);\n","'use strict';\n\nvar toStr = Object.prototype.toString;\nvar hasSymbols = require('has-symbols')();\n\nif (hasSymbols) {\n\tvar symToStr = Symbol.prototype.toString;\n\tvar symStringRegex = /^Symbol\\(.*\\)$/;\n\tvar isSymbolObject = function isRealSymbolObject(value) {\n\t\tif (typeof value.valueOf() !== 'symbol') {\n\t\t\treturn false;\n\t\t}\n\t\treturn symStringRegex.test(symToStr.call(value));\n\t};\n\n\tmodule.exports = function isSymbol(value) {\n\t\tif (typeof value === 'symbol') {\n\t\t\treturn true;\n\t\t}\n\t\tif (toStr.call(value) !== '[object Symbol]') {\n\t\t\treturn false;\n\t\t}\n\t\ttry {\n\t\t\treturn isSymbolObject(value);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n} else {\n\n\tmodule.exports = function isSymbol(value) {\n\t\t// this environment does not support Symbols.\n\t\treturn false && value;\n\t};\n}\n","/*!\n * is-primitive <https://github.com/jonschlinkert/is-primitive>\n *\n * Copyright (c) 2014-present, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function isPrimitive(val) {\n  if (typeof val === 'object') {\n    return val === null;\n  }\n  return typeof val !== 'function';\n};\n","/**\n * @file Constructors cached from literals.\n * @version 1.0.2\n * @author Xotic750 <Xotic750@gmail.com>\n * @copyright  Xotic750\n * @license {@link <https://opensource.org/licenses/MIT> MIT}\n * @module cached-constructors-x\n */\n\n'use strict';\n\n/**\n * Constructors cached from literals.\n *\n * @type Object\n * @example\n * var constructors = require('cached-constructors-x');\n */\nmodule.exports = {\n  Array: [].constructor,\n  Boolean: true.constructor,\n  Function: function () {}.constructor,\n  Number: (0).constructor,\n  Object: {}.constructor,\n  RegExp: (/(?:)/).constructor,\n  String: ''.constructor\n};\n","/**\n * @file List of ECMAScript white space characters.\n * @version 3.0.1\n * @author Xotic750 <Xotic750@gmail.com>\n * @copyright  Xotic750\n * @license {@link <https://opensource.org/licenses/MIT> MIT}\n * @module white-space-x\n */\n\n'use strict';\n\n/**\n * A record of a white space character.\n *\n * @typedef {Object} CharRecord\n * @property {number} code - The character code.\n * @property {string} description - A description of the character.\n * @property {boolean} es5 - Whether the spec lists this as a white space.\n * @property {boolean} es2015 - Whether the spec lists this as a white space.\n * @property {boolean} es2016 - Whether the spec lists this as a white space.\n * @property {boolean} es2017 - Whether the spec lists this as a white space.\n * @property {boolean} es2018 - Whether the spec lists this as a white space.\n * @property {string} string - The character string.\n */\n\n/**\n * An array of the whitespace char codes, string, descriptions and language\n * presence in the specifications.\n *\n * @private\n * @type Array.<CharRecord>\n */\nvar list = [\n  {\n    code: 0x0009,\n    description: 'Tab',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u0009'\n  },\n  {\n    code: 0x000a,\n    description: 'Line Feed',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u000a'\n  },\n  {\n    code: 0x000b,\n    description: 'Vertical Tab',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u000b'\n  },\n  {\n    code: 0x000c,\n    description: 'Form Feed',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u000c'\n  },\n  {\n    code: 0x000d,\n    description: 'Carriage Return',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u000d'\n  },\n  {\n    code: 0x0020,\n    description: 'Space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u0020'\n  },\n  /*\n  {\n    code: 0x0085,\n    description: 'Next line',\n    es5: false,\n    es2015: false,\n    es2016: false,\n    es2017: false,\n    es2018: false,\n    string: '\\u0085'\n  }\n  */\n  {\n    code: 0x00a0,\n    description: 'No-break space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u00a0'\n  },\n  {\n    code: 0x1680,\n    description: 'Ogham space mark',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u1680'\n  },\n  {\n    code: 0x180e,\n    description: 'Mongolian vowel separator',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: false,\n    es2018: false,\n    string: '\\u180e'\n  },\n  {\n    code: 0x2000,\n    description: 'En quad',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2000'\n  },\n  {\n    code: 0x2001,\n    description: 'Em quad',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2001'\n  },\n  {\n    code: 0x2002,\n    description: 'En space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2002'\n  },\n  {\n    code: 0x2003,\n    description: 'Em space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2003'\n  },\n  {\n    code: 0x2004,\n    description: 'Three-per-em space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2004'\n  },\n  {\n    code: 0x2005,\n    description: 'Four-per-em space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2005'\n  },\n  {\n    code: 0x2006,\n    description: 'Six-per-em space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2006'\n  },\n  {\n    code: 0x2007,\n    description: 'Figure space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2007'\n  },\n  {\n    code: 0x2008,\n    description: 'Punctuation space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2008'\n  },\n  {\n    code: 0x2009,\n    description: 'Thin space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2009'\n  },\n  {\n    code: 0x200a,\n    description: 'Hair space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u200a'\n  },\n  /*\n  {\n    code: 0x200b,\n    description: 'Zero width space',\n    es5: false,\n    es2015: false,\n    es2016: false,\n    es2017: false,\n    es2018: false,\n    string: '\\u200b'\n  },\n  */\n  {\n    code: 0x2028,\n    description: 'Line separator',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2028'\n  },\n  {\n    code: 0x2029,\n    description: 'Paragraph separator',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2029'\n  },\n  {\n    code: 0x202f,\n    description: 'Narrow no-break space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u202f'\n  },\n  {\n    code: 0x205f,\n    description: 'Medium mathematical space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u205f'\n  },\n  {\n    code: 0x3000,\n    description: 'Ideographic space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u3000'\n  },\n  {\n    code: 0xfeff,\n    description: 'Byte Order Mark',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\ufeff'\n  }\n];\n\nvar stringES2016 = '';\nvar stringES2018 = '';\nvar length = list.length;\nfor (var i = 0; i < length; i += 1) {\n  if (list[i].es2016) {\n    stringES2016 += list[i].string;\n  }\n\n  if (list[i].es2018) {\n    stringES2018 += list[i].string;\n  }\n}\n\nmodule.exports = {\n  /**\n   * An array of the whitespace char codes, string, descriptions and language\n   * presence in the specifications.\n   *\n   * @type Array.<CharRecord>\n   * @example\n   * var whiteSpace = require('white-space-x');\n   * whiteSpaces.list.foreach(function (item) {\n   *   console.log(lib.description, item.code, item.string);\n   * });\n   */\n  list: list,\n  /**\n   * A string of the ES2017 to ES2018 whitespace characters.\n   *\n   * @type string\n   */\n  string: stringES2018,\n\n  /**\n   * A string of the ES5 to ES2016 whitespace characters.\n   *\n   * @type string\n   */\n  string5: stringES2016,\n\n  /**\n   * A string of the ES5 to ES2016 whitespace characters.\n   *\n   * @type string\n   */\n  string2015: stringES2016,\n\n  /**\n   * A string of the ES5 to ES2016 whitespace characters.\n   *\n   * @type string\n   * @example\n   * var whiteSpace = require('white-space-x');\n   * var characters = [\n   *   '\\u0009',\n   *   '\\u000a',\n   *   '\\u000b',\n   *   '\\u000c',\n   *   '\\u000d',\n   *   '\\u0020',\n   *   '\\u00a0',\n   *   '\\u1680',\n   *   '\\u180e',\n   *   '\\u2000',\n   *   '\\u2001',\n   *   '\\u2002',\n   *   '\\u2003',\n   *   '\\u2004',\n   *   '\\u2005',\n   *   '\\u2006',\n   *   '\\u2007',\n   *   '\\u2008',\n   *   '\\u2009',\n   *   '\\u200a',\n   *   '\\u2028',\n   *   '\\u2029',\n   *   '\\u202f',\n   *   '\\u205f',\n   *   '\\u3000',\n   *   '\\ufeff'\n   * ];\n   * var ws = characters.join('');\n   * var re1 = new RegExp('^[' + whiteSpace.string2016 + ']+$)');\n   * re1.test(ws); // true\n   */\n  string2016: stringES2016,\n\n  /**\n   * A string of the ES2017 to ES2018 whitespace characters.\n   *\n   * @type string\n   */\n  string2017: stringES2018,\n\n  /**\n   * A string of the ES2017 to ES2018 whitespace characters.\n   *\n   * @type string\n   * @example\n   * var whiteSpace = require('white-space-x');\n   * var characters = [\n   *   '\\u0009',\n   *   '\\u000a',\n   *   '\\u000b',\n   *   '\\u000c',\n   *   '\\u000d',\n   *   '\\u0020',\n   *   '\\u00a0',\n   *   '\\u1680',\n   *   '\\u2000',\n   *   '\\u2001',\n   *   '\\u2002',\n   *   '\\u2003',\n   *   '\\u2004',\n   *   '\\u2005',\n   *   '\\u2006',\n   *   '\\u2007',\n   *   '\\u2008',\n   *   '\\u2009',\n   *   '\\u200a',\n   *   '\\u2028',\n   *   '\\u2029',\n   *   '\\u202f',\n   *   '\\u205f',\n   *   '\\u3000',\n   *   '\\ufeff'\n   * ];\n   * var ws = characters.join('');\n   * var re1 = new RegExp('^[' + whiteSpace.string2018 + ']+$)');\n   * re1.test(ws); // true\n   */\n  string2018: stringES2018\n};\n","/**\n * @file Converts argument to a value of type Number.\n * @version 2.0.0\n * @author Xotic750 <Xotic750@gmail.com>\n * @copyright  Xotic750\n * @license {@link <https://opensource.org/licenses/MIT> MIT}\n * @module to-number-x\n */\n\n'use strict';\n\nvar cachedCtrs = require('cached-constructors-x');\nvar castNumber = cachedCtrs.Number;\nvar Rx = cachedCtrs.RegExp;\nvar toPrimitive = require('to-primitive-x');\nvar libTrim = require('trim-x');\nvar trim2016 = libTrim.trim2016;\nvar trim2018 = libTrim.trim2018;\nvar libParseInt = require('parse-int-x');\nvar $parseInt2016 = libParseInt.parseInt2016;\nvar $parseInt2018 = libParseInt.parseInt2018;\nvar pStrSlice = cachedCtrs.String.prototype.slice;\nvar NAN = require('nan-x');\n\nvar binaryRegex = /^0b[01]+$/i;\n// Note that in IE 8, RegExp.prototype.test doesn't seem to exist: ie, \"test\" is\n// an own property of regexes. wtf.\nvar test = binaryRegex.test;\nvar isBinary = function _isBinary(value) {\n  return test.call(binaryRegex, value);\n};\n\nvar octalRegex = /^0o[0-7]+$/i;\nvar isOctal = function _isOctal(value) {\n  return test.call(octalRegex, value);\n};\n\nvar nonWSregex2016 = new Rx('[\\u0085\\u200b\\ufffe]', 'g');\nvar hasNonWS2016 = function _hasNonWS(value) {\n  return test.call(nonWSregex2016, value);\n};\n\nvar nonWSregex2018 = new Rx('[\\u0085\\u180e\\u200b\\ufffe]', 'g');\nvar hasNonWS2018 = function _hasNonWS(value) {\n  return test.call(nonWSregex2018, value);\n};\n\nvar invalidHexLiteral = /^[-+]0x[0-9a-f]+$/i;\nvar isInvalidHexLiteral = function _isInvalidHexLiteral(value) {\n  return test.call(invalidHexLiteral, value);\n};\n\nvar $toNumber2016 = function toNumber2016(argument) {\n  var value = toPrimitive(argument, Number);\n  if (typeof value === 'symbol') {\n    throw new TypeError('Cannot convert a Symbol value to a number');\n  }\n\n  if (typeof value === 'string') {\n    if (isBinary(value)) {\n      return toNumber2016($parseInt2016(pStrSlice.call(value, 2), 2));\n    }\n\n    if (isOctal(value)) {\n      return toNumber2016($parseInt2016(pStrSlice.call(value, 2), 8));\n    }\n\n    if (hasNonWS2016(value) || isInvalidHexLiteral(value)) {\n      return NAN;\n    }\n\n    var trimmed = trim2016(value);\n    if (trimmed !== value) {\n      return toNumber2016(trimmed);\n    }\n  }\n\n  return castNumber(value);\n};\n\nvar $toNumber2018 = function toNumber2018(argument) {\n  var value = toPrimitive(argument, Number);\n  if (typeof value === 'symbol') {\n    throw new TypeError('Cannot convert a Symbol value to a number');\n  }\n\n  if (typeof value === 'string') {\n    if (isBinary(value)) {\n      return toNumber2018($parseInt2018(pStrSlice.call(value, 2), 2));\n    }\n\n    if (isOctal(value)) {\n      return toNumber2018($parseInt2018(pStrSlice.call(value, 2), 8));\n    }\n\n    if (hasNonWS2018(value) || isInvalidHexLiteral(value)) {\n      return NAN;\n    }\n\n    var trimmed = trim2018(value);\n    if (trimmed !== value) {\n      return toNumber2018(trimmed);\n    }\n  }\n\n  return castNumber(value);\n};\n\nmodule.exports = {\n  /**\n   * reference to toNumber2018.\n   */\n  toNumber: $toNumber2018,\n\n  /**\n   * This method converts argument to a value of type Number. (ES2016)\n\n   * @param {*} argument - The argument to convert to a number.\n   * @throws {TypeError} - If argument is a Symbol or not coercible.\n   * @returns {*} The argument converted to a number.\n   * @example\n   * var toNumber = require('to-number-x').toNumber2016;\n   *\n   * toNumber('1'); // 1\n   * toNumber(null); // 0\n   * toNumber(true); // 1\n   * toNumber('0o10'); // 8\n   * toNumber('0b10'); // 2\n   * toNumber('0xF'); // 16\n   *\n   * toNumber(' 1 '); // 1\n   *\n   * toNumber(Symbol('')) // TypeError\n   * toNumber(Object.create(null)) // TypeError\n   */\n  toNumber2016: $toNumber2016,\n\n  /**\n   * This method converts argument to a value of type Number. (ES2018)\n\n   * @param {*} argument - The argument to convert to a number.\n   * @throws {TypeError} - If argument is a Symbol or not coercible.\n   * @returns {*} The argument converted to a number.\n   * @example\n   * var toNumber = require('to-number-x').toNumber2018;\n   *\n   * toNumber('1'); // 1\n   * toNumber(null); // 0\n   * toNumber(true); // 1\n   * toNumber('0o10'); // 8\n   * toNumber('0b10'); // 2\n   * toNumber('0xF'); // 16\n   *\n   * toNumber(' 1 '); // 1\n   *\n   * toNumber(Symbol('')) // TypeError\n   * toNumber(Object.create(null)) // TypeError\n   */\n  toNumber2018: $toNumber2018\n};\n","/**\n*\n*\tVALIDATE: undefined\n*\n*\n*\tDESCRIPTION:\n*\t\t- Validates if a value is undefined.\n*\n*\n*\tNOTES:\n*\t\t[1]\n*\n*\n*\tTODO:\n*\t\t[1]\n*\n*\n*\tLICENSE:\n*\t\tMIT\n*\n*\tCopyright (c) 2014. Athan Reines.\n*\n*\n*\tAUTHOR:\n*\t\tAthan Reines. kgryte@gmail.com. 2014.\n*\n*/\n\n'use strict';\n\n/**\n* FUNCTION: isUndefined( value )\n*\tValidates if a value is undefined.\n*\n* @param {*} value - value to be validated\n* @returns {Boolean} boolean indicating whether value is undefined\n*/\nfunction isUndefined( value ) {\n\treturn value === void 0;\n} // end FUNCTION isUndefined()\n\n\n// EXPORTS //\n\nmodule.exports = isUndefined;\n","/**\n * @file This method removes whitespace from the left end of a string.\n * @version 3.0.0\n * @author Xotic750 <Xotic750@gmail.com>\n * @copyright  Xotic750\n * @license {@link <https://opensource.org/licenses/MIT> MIT}\n * @module trim-left-x\n */\n\n'use strict';\n\nvar requireCoercibleToString = require('require-coercible-to-string-x');\nvar Rx = require('cached-constructors-x').RegExp;\nvar reLeft2016 = new Rx('^[' + require('white-space-x').string2016 + ']+');\nvar reLeft2018 = new Rx('^[' + require('white-space-x').string2018 + ']+');\nvar replace = ''.replace;\n\nvar $trimLeft2016 = function trimLeft2016(string) {\n  return replace.call(requireCoercibleToString(string), reLeft2016, '');\n};\n\nvar $trimLeft2018 = function trimLeft2018(string) {\n  return replace.call(requireCoercibleToString(string), reLeft2018, '');\n};\n\nmodule.exports = {\n  /**\n   * A reference to leftTrim2018.\n   */\n  trimLeft: $trimLeft2018,\n\n  /**\n   * This method removes whitespace from the left end of a string. (ES2016)\n   *\n   * @param {string} string - The string to trim the left end whitespace from.\n   * @throws {TypeError} If string is null or undefined or not coercible.\n   * @returns {string} The left trimmed string.\n   * @example\n   * var trimLeft = require('trim-left-x').trimLeft2016;\n   *\n   * trimLeft(' \\t\\na \\t\\n') === 'a \\t\\n'; // true\n   */\n  trimLeft2016: $trimLeft2016,\n\n  /**\n   * This method removes whitespace from the left end of a string. (ES2018)\n   *\n   * @param {string} string - The string to trim the left end whitespace from.\n   * @throws {TypeError} If string is null or undefined or not coercible.\n   * @returns {string} The left trimmed string.\n   * @example\n   * var trimLeft = require('trim-left-x').trimLeft2018;\n   *\n   * trimLeft(' \\t\\na \\t\\n') === 'a \\t\\n'; // true\n   */\n  trimLeft2018: $trimLeft2018\n};\n","/**\n * @file Requires an argument is corecible then converts using ToString.\n * @version 1.0.2\n * @author Xotic750 <Xotic750@gmail.com>\n * @copyright  Xotic750\n * @license {@link <https://opensource.org/licenses/MIT> MIT}\n * @module require-coercible-to-string-x\n */\n\n'use strict';\n\nvar requireObjectCoercible = require('require-object-coercible-x');\nvar toStr = require('to-string-x');\n\n/**\n * This method requires an argument is corecible then converts using ToString.\n *\n * @param {*} value - The value to converted to a string.\n * @throws {TypeError} If value is null or undefined.\n * @returns {string} The value as a string.\n * @example\n * var requireCoercibleToString = require('require-coercible-to-string-x');\n *\n * requireCoercibleToString(); // TypeError\n * requireCoercibleToString(null); // TypeError\n * requireCoercibleToString(Symbol('')); // TypeError\n * requireCoercibleToString(Object.create(null)); // TypeError\n * requireCoercibleToString(1); // '1'\n * requireCoercibleToString(true); // 'true'\n */\nmodule.exports = function requireCoercibleToString(value) {\n  return toStr(requireObjectCoercible(value));\n};\n","/**\n * @file ES6-compliant shim for ToString.\n * @see {@link http://www.ecma-international.org/ecma-262/6.0/#sec-tostring|7.1.12 ToString ( argument )}\n * @version 1.4.5\n * @author Xotic750 <Xotic750@gmail.com>\n * @copyright  Xotic750\n * @license {@link <https://opensource.org/licenses/MIT> MIT}\n * @module to-string-x\n */\n\n'use strict';\n\nvar castString = require('cached-constructors-x').String;\nvar isSymbol = require('is-symbol');\n\n/**\n * The abstract operation ToString converts argument to a value of type String.\n *\n * @param {*} value - The value to convert to a string.\n * @throws {TypeError} If `value` is a Symbol.\n * @returns {string} The converted value.\n * @example\n * var $toString = require('to-string-x');\n *\n * $toString(); // 'undefined'\n * $toString(null); // 'null'\n * $toString('abc'); // 'abc'\n * $toString(true); // 'true'\n * $toString(Symbol('foo')); // TypeError\n * $toString(Symbol.iterator); // TypeError\n * $toString(Object(Symbol.iterator)); // TypeError\n * $toString(Object.create(null)); // TypeError\n */\nmodule.exports = function ToString(value) {\n  if (isSymbol(value)) {\n    throw new TypeError('Cannot convert a Symbol value to a string');\n  }\n\n  return castString(value);\n};\n","/**\n * @file ES6-compliant shim for Number.isNaN - the global isNaN returns false positives.\n * @version 1.0.3\n * @author Xotic750 <Xotic750@gmail.com>\n * @copyright  Xotic750\n * @license {@link <https://opensource.org/licenses/MIT> MIT}\n * @module is-nan-x\n */\n\n'use strict';\n\n/**\n * This method determines whether the passed value is NaN and its type is\n * `Number`. It is a more robust version of the original, global isNaN().\n *\n * @param {*} value - The value to be tested for NaN.\n * @returns {boolean} `true` if the given value is NaN and its type is Number;\n *  otherwise, `false`.\n * @example\n * var numberIsNaN = require('is-nan-x');\n *\n * numberIsNaN(NaN);        // true\n * numberIsNaN(Number.NaN); // true\n * numberIsNaN(0 / 0);      // true\n *\n * // e.g. these would have been true with global isNaN()\n * numberIsNaN('NaN');      // false\n * numberIsNaN(undefined);  // false\n * numberIsNaN({});         // false\n * numberIsNaN('blabla');   // false\n *\n * // These all return false\n * numberIsNaN(true);\n * numberIsNaN(null);\n * numberIsNaN(37);\n * numberIsNaN('37');\n * numberIsNaN('37.37');\n * numberIsNaN('');\n * numberIsNaN(' ');\n */\nmodule.exports = function isNaN(value) {\n  return value !== value;\n};\n","'use strict';\n\nvar getDay = Date.prototype.getDay;\nvar tryDateObject = function tryDateObject(value) {\n\ttry {\n\t\tgetDay.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\n\nvar toStr = Object.prototype.toString;\nvar dateClass = '[object Date]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isDateObject(value) {\n\tif (typeof value !== 'object' || value === null) { return false; }\n\treturn hasToStringTag ? tryDateObject(value) : toStr.call(value) === dateClass;\n};\n","/**\n * @file Converts argument to a value of type Boolean.\n * @version 1.0.3\n * @author Xotic750 <Xotic750@gmail.com>\n * @copyright  Xotic750\n * @license {@link <https://opensource.org/licenses/MIT> MIT}\n * @module to-boolean-x\n */\n\n'use strict';\n\n/**\n * The abstract operation ToBoolean converts argument to a value of type Boolean.\n *\n * @param {*} value - The value to be converted.\n * @returns {boolean} 'true' if value is truthy; otherwise 'false'.\n * @example\n * var toBoolean = require('to-boolean-x');\n *\n * toBoolean(null); // false\n * toBoolean(''); // false\n * toBoolean(1); // true\n * toBoolean('0'); // true\n */\nmodule.exports = function toBoolean(value) {\n  return !!value;\n};\n","/**\n * lodash 3.0.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.7.0 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * Checks if `value` is `null`.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n * @example\n *\n * _.isNull(null);\n * // => true\n *\n * _.isNull(void 0);\n * // => false\n */\nfunction isNull(value) {\n  return value === null;\n}\n\nmodule.exports = isNull;\n","/**\n * @file This method removes whitespace from the left and right end of a string.\n * @version 3.0.0\n * @author Xotic750 <Xotic750@gmail.com>\n * @copyright  Xotic750\n * @license {@link <https://opensource.org/licenses/MIT> MIT}\n * @module trim-x\n */\n\n'use strict';\n\nvar libTrimLeft = require('trim-left-x');\nvar trimLeft2016 = libTrimLeft.trimLeft2016;\nvar trimLeft2018 = libTrimLeft.trimLeft2018;\nvar libTrimRight = require('trim-right-x');\nvar trimRight2016 = libTrimRight.trimRight2016;\nvar trimRight2018 = libTrimRight.trimRight2016;\n\nvar $trim2016 = function trim2016(string) {\n  return trimLeft2016(trimRight2016(string));\n};\n\nvar $trim2018 = function trim2018(string) {\n  return trimLeft2018(trimRight2018(string));\n};\n\nmodule.exports = {\n  /**\n   * A reference to trim2018.\n   */\n  trim: $trim2018,\n\n  /**\n   * This method removes whitespace from the left and right end of a string.\n   * (ES2016)\n   * @param {string} string - The string to trim the whitespace from.\n   * @throws {TypeError} If string is null or undefined or not coercible.\n   * @returns {string} The trimmed string.\n   * @example\n   * var trim = require('trim-x');\n   *\n   * trim(' \\t\\na \\t\\n') === 'a'; // true\n   */\n  trim2016: $trim2016,\n\n  /**\n   * This method removes whitespace from the left and right end of a string.\n   * (ES2018)\n   *\n   * @param {string} string - The string to trim the whitespace from.\n   * @throws {TypeError} If string is null or undefined or not coercible.\n   * @returns {string} The trimmed string.\n   * @example\n   * var trim = require('trim-x');\n   *\n   * trim(' \\t\\na \\t\\n') === 'a'; // true\n   */\n  trim2018: $trim2018\n};\n","/**\n * @file ES6-compliant shim for RequireObjectCoercible.\n * @see {@link http://www.ecma-international.org/ecma-262/6.0/#sec-requireobjectcoercible|7.2.1 RequireObjectCoercible ( argument )}\n * @version 1.4.3\n * @author Xotic750 <Xotic750@gmail.com>\n * @copyright  Xotic750\n * @license {@link <https://opensource.org/licenses/MIT> MIT}\n * @module require-object-coercible-x\n */\n\n'use strict';\n\nvar isNil = require('is-nil-x');\n\n/**\n * The abstract operation RequireObjectCoercible throws an error if argument\n * is a value that cannot be converted to an Object using ToObject.\n *\n * @param {*} value - The `value` to check.\n * @throws {TypeError} If `value` is a `null` or `undefined`.\n * @returns {string} The `value`.\n * @example\n * var RequireObjectCoercible = require('require-object-coercible-x');\n *\n * RequireObjectCoercible(); // TypeError\n * RequireObjectCoercible(null); // TypeError\n * RequireObjectCoercible('abc'); // 'abc'\n * RequireObjectCoercible(true); // true\n * RequireObjectCoercible(Symbol('foo')); // Symbol('foo')\n */\nmodule.exports = function RequireObjectCoercible(value) {\n  if (isNil(value)) {\n    throw new TypeError('Cannot call method on ' + value);\n  }\n\n  return value;\n};\n","/**\n * @file Checks if `value` is `null` or `undefined`.\n * @version 1.4.2\n * @author Xotic750 <Xotic750@gmail.com>\n * @copyright  Xotic750\n * @license {@link <https://opensource.org/licenses/MIT> MIT}\n * @module is-nil-x\n */\n\n'use strict';\n\nvar isUndefined = require('validate.io-undefined');\nvar isNull = require('lodash.isnull');\n\n/**\n * Checks if `value` is `null` or `undefined`.\n *\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n * @example\n * var isNil = require('is-nil-x');\n *\n * isNil(null); // => true\n * isNil(void 0); // => true\n * isNil(NaN); // => false\n */\nmodule.exports = function isNil(value) {\n  return isNull(value) || isUndefined(value);\n};\n","/**\n * @file The constant NaN derived mathematically by 0 / 0.\n * @version 1.0.2\n * @author Xotic750 <Xotic750@gmail.com>\n * @copyright  Xotic750\n * @license {@link <https://opensource.org/licenses/MIT> MIT}\n * @module nan-x\n */\n\n'use strict';\n\n/**\n * The constant NaN derived mathematically by 0 / 0.\n *\n * @type number\n * @example\n * var NAN = require('nan-x');\n *\n * NAN !== NAN; // true\n * NAN === NAN; // false\n */\nmodule.exports = 0 / 0;\n","'use strict';\n\nvar strValue = String.prototype.valueOf;\nvar tryStringObject = function tryStringObject(value) {\n\ttry {\n\t\tstrValue.call(value);\n\t\treturn true;\n\t} catch (e) {\n\t\treturn false;\n\t}\n};\nvar toStr = Object.prototype.toString;\nvar strClass = '[object String]';\nvar hasToStringTag = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\n\nmodule.exports = function isString(value) {\n\tif (typeof value === 'string') { return true; }\n\tif (typeof value !== 'object') { return false; }\n\treturn hasToStringTag ? tryStringObject(value) : toStr.call(value) === strClass;\n};\n","/**\n * @file Determine whether the passed value is a zero based index.\n * @version 1.1.0\n * @author Xotic750 <Xotic750@gmail.com>\n * @copyright  Xotic750\n * @license {@link <https://opensource.org/licenses/MIT> MIT}\n * @module is-index-x\n */\n\n'use strict';\n\nvar safeToString = require('to-string-symbols-supported-x');\nvar toInteger = require('to-integer-x').toInteger2018;\nvar toNumber = require('to-number-x').toNumber2018;\nvar mathClamp = require('math-clamp-x');\nvar MAX_SAFE_INTEGER = require('max-safe-integer');\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\nvar rxTest = reIsUint.test;\n\n/**\n * This method determines whether the passed value is a zero based index.\n * JavaScript arrays are zero-indexed: the first element of an array is at\n * index 0, and the last element is at the index equal to the value of the\n * array's length property minus 1.\n *\n * @param {number|string} value - The value to be tested for being a zero based index.\n * @param {number} [length=MAX_SAFE_INTEGER] - The length that sets the upper bound.\n * @returns {boolean} A Boolean indicating whether or not the given value is a\n * zero based index within bounds.\n * @example\n * var isIndex = require('is-index-x');\n *\n * isIndex(0);                    // true\n * isIndex(1);                    // true\n * isIndex('10');                 // true\n *\n * isIndex(-100000);              // false\n * isIndex(Math.pow(2, 53));      // false\n * isIndex(0.1);                  // false\n * isIndex(Math.PI);              // false\n * isIndex(NaN);                  // false\n * isIndex(Infinity);             // false\n * isIndex(-Infinity);            // false\n * isIndex(true);                 // false\n * isIndex(false);                // false\n * isIndex([1]);                  // false\n * isIndex(10, 10);               // false\n */\nmodule.exports = function isIndex(value) {\n  var string = safeToString(value);\n  if (rxTest.call(reIsUint, string) === false) {\n    return false;\n  }\n\n  var number = toNumber(string);\n  if (arguments.length > 1) {\n    return number < mathClamp(toInteger(arguments[1]), MAX_SAFE_INTEGER);\n  }\n\n  return number < MAX_SAFE_INTEGER;\n};\n","'use strict';\n\nvar origSymbol = global.Symbol;\nvar hasSymbolSham = require('./shams');\n\nmodule.exports = function hasNativeSymbols() {\n\tif (typeof origSymbol !== 'function') { return false; }\n\tif (typeof Symbol !== 'function') { return false; }\n\tif (typeof origSymbol('foo') !== 'symbol') { return false; }\n\tif (typeof Symbol('bar') !== 'symbol') { return false; }\n\n\treturn hasSymbolSham();\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict';\n\n/* eslint complexity: [2, 17], max-statements: [2, 33] */\nmodule.exports = function hasSymbols() {\n\tif (typeof Symbol !== 'function' || typeof Object.getOwnPropertySymbols !== 'function') { return false; }\n\tif (typeof Symbol.iterator === 'symbol') { return true; }\n\n\tvar obj = {};\n\tvar sym = Symbol('test');\n\tvar symObj = Object(sym);\n\tif (typeof sym === 'string') { return false; }\n\n\tif (Object.prototype.toString.call(sym) !== '[object Symbol]') { return false; }\n\tif (Object.prototype.toString.call(symObj) !== '[object Symbol]') { return false; }\n\n\t// temp disabled per https://github.com/ljharb/object.assign/issues/17\n\t// if (sym instanceof Symbol) { return false; }\n\t// temp disabled per https://github.com/WebReflection/get-own-property-symbols/issues/4\n\t// if (!(symObj instanceof Symbol)) { return false; }\n\n\t// if (typeof Symbol.prototype.toString !== 'function') { return false; }\n\t// if (String(sym) !== Symbol.prototype.toString.call(sym)) { return false; }\n\n\tvar symVal = 42;\n\tobj[sym] = symVal;\n\tfor (sym in obj) { return false; } // eslint-disable-line no-restricted-syntax\n\tif (typeof Object.keys === 'function' && Object.keys(obj).length !== 0) { return false; }\n\n\tif (typeof Object.getOwnPropertyNames === 'function' && Object.getOwnPropertyNames(obj).length !== 0) { return false; }\n\n\tvar syms = Object.getOwnPropertySymbols(obj);\n\tif (syms.length !== 1 || syms[0] !== sym) { return false; }\n\n\tif (!Object.prototype.propertyIsEnumerable.call(obj, sym)) { return false; }\n\n\tif (typeof Object.getOwnPropertyDescriptor === 'function') {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(obj, sym);\n\t\tif (descriptor.value !== symVal || descriptor.enumerable !== true) { return false; }\n\t}\n\n\treturn true;\n};\n","/**\n * @file ES6 abstract ToString with Symbol conversion support.\n * @see {@link http://www.ecma-international.org/ecma-262/6.0/#sec-tostring|7.1.12 ToString ( argument )}\n * @version 1.0.2\n * @author Xotic750 <Xotic750@gmail.com>\n * @copyright  Xotic750\n * @license {@link <https://opensource.org/licenses/MIT> MIT}\n * @module to-string-symbols-supported-x\n */\n\n'use strict';\n\nvar castString = require('cached-constructors-x').String;\nvar pToString = require('has-symbol-support-x') && Symbol.prototype.toString;\nvar isSymbol = typeof pToString === 'function' && require('is-symbol');\n\n/**\n * The abstract operation ToString converts argument to a value of type String,\n * however the specification states that if the argument is a Symbol then a\n * 'TypeError' is thrown. This version also allows Symbols be converted to\n * a string. Other uncoercible exotics will still throw though.\n *\n * @param {*} value - The value to convert to a string.\n * @returns {string} The converted value.\n * @example\n * var toStringSymbolsSupported = require('to-string-symbols-supported-x');\n *\n * toStringSymbolsSupported(); // 'undefined'\n * toStringSymbolsSupported(null); // 'null'\n * toStringSymbolsSupported('abc'); // 'abc'\n * toStringSymbolsSupported(true); // 'true'\n * toStringSymbolsSupported(Symbol('foo')); // 'Symbol('foo')'\n * toStringSymbolsSupported(Object(Symbol('foo'))); // 'Symbol('foo')'\n * toStringSymbolsSupported(Object.create(null)); // TypeError\n */\nmodule.exports = function toStringSymbolsSupported(value) {\n  return isSymbol && isSymbol(value) ? pToString.call(value) : castString(value);\n};\n","/**\n * @file Tests if ES6 Symbol is supported.\n * @version 1.4.2\n * @author Xotic750 <Xotic750@gmail.com>\n * @copyright  Xotic750\n * @license {@link <https://opensource.org/licenses/MIT> MIT}\n * @module has-symbol-support-x\n */\n\n'use strict';\n\n/**\n * Indicates if `Symbol`exists and creates the correct type.\n * `true`, if it exists and creates the correct type, otherwise `false`.\n *\n * @type boolean\n */\nmodule.exports = typeof Symbol === 'function' && typeof Symbol('') === 'symbol';\n","/**\n * @file ToInteger converts 'argument' to an integral numeric value.\n * @see {@link http://www.ecma-international.org/ecma-262/6.0/#sec-tointeger|7.1.4 ToInteger ( argument )}\n * @version 3.0.0\n * @author Xotic750 <Xotic750@gmail.com>\n * @copyright  Xotic750\n * @license {@link <https://opensource.org/licenses/MIT> MIT}\n * @module to-integer-x\n */\n\n'use strict';\n\nvar libToNumber = require('to-number-x');\nvar toNumber2016 = libToNumber.toNumber2016;\nvar toNumber2018 = libToNumber.toNumber2018;\nvar numberIsNaN = require('is-nan-x');\nvar numberIsFinite = require('is-finite-x');\nvar libMathSign = require('math-sign-x');\nvar mathSign2016 = libMathSign.sign2016;\nvar mathSign2018 = libMathSign.sign2018;\nvar mathFloor = Math.floor;\nvar mathAbs = Math.abs;\n\nvar $toInteger2016 = function toInteger2016(value) {\n  var number = toNumber2016(value);\n  if (numberIsNaN(number)) {\n    return 0;\n  }\n\n  if (number === 0 || numberIsFinite(number) === false) {\n    return number;\n  }\n\n  return mathSign2016(number) * mathFloor(mathAbs(number));\n};\n\nvar $toInteger2018 = function toInteger2018(value) {\n  var number = toNumber2018(value);\n  if (numberIsNaN(number)) {\n    return 0;\n  }\n\n  if (number === 0 || numberIsFinite(number) === false) {\n    return number;\n  }\n\n  return mathSign2018(number) * mathFloor(mathAbs(number));\n};\n\nmodule.exports = {\n  /**\n   * Reference to toInteger2018.\n   */\n  toInteger: $toInteger2018,\n\n  /**\n   * Converts `value` to an integer. (ES2016)\n   *\n   * @param {*} value - The value to convert.\n   * @returns {number} Returns the converted integer.\n   *\n   * @example\n   * var toInteger = require('to-integer-x').toInteger2016;\n   * toInteger(3); // 3\n   * toInteger(Number.MIN_VALUE); // 0\n   * toInteger(Infinity); // 1.7976931348623157e+308\n   * toInteger('3'); // 3\n   */\n  toInteger2016: $toInteger2016,\n\n  /**\n   * Converts `value` to an integer. (ES2018)\n   *\n   * @param {*} value - The value to convert.\n   * @returns {number} Returns the converted integer.\n   *\n   * @example\n   * var toInteger = require('to-integer-x').toInteger2018;\n   * toInteger(3); // 3\n   * toInteger(Number.MIN_VALUE); // 0\n   * toInteger(Infinity); // 1.7976931348623157e+308\n   * toInteger('3'); // 3\n   */\n  toInteger2018: $toInteger2018\n};\n","/**\n * @file Converts a JavaScript object to a primitive value.\n * @version 1.1.0\n * @author Xotic750 <Xotic750@gmail.com>\n * @copyright  Xotic750\n * @license {@link <https://opensource.org/licenses/MIT> MIT}\n * @module to-primitive-x\n */\n\n'use strict';\n\nvar hasSymbols = require('has-symbol-support-x');\nvar isPrimitive = require('is-primitive');\nvar isDate = require('is-date-object');\nvar isSymbol = require('is-symbol');\nvar isFunction = require('is-function-x');\nvar requireObjectCoercible = require('require-object-coercible-x');\nvar isNil = require('is-nil-x');\nvar isUndefined = require('validate.io-undefined');\nvar symToPrimitive = hasSymbols && Symbol.toPrimitive;\nvar symValueOf = hasSymbols && Symbol.prototype.valueOf;\n\nvar toStringOrder = ['toString', 'valueOf'];\nvar toNumberOrder = ['valueOf', 'toString'];\nvar orderLength = 2;\n\nvar ordinaryToPrimitive = function _ordinaryToPrimitive(O, hint) {\n  requireObjectCoercible(O);\n  if (typeof hint !== 'string' || (hint !== 'number' && hint !== 'string')) {\n    throw new TypeError('hint must be \"string\" or \"number\"');\n  }\n\n  var methodNames = hint === 'string' ? toStringOrder : toNumberOrder;\n  var method;\n  var result;\n  for (var i = 0; i < orderLength; i += 1) {\n    method = O[methodNames[i]];\n    if (isFunction(method)) {\n      result = method.call(O);\n      if (isPrimitive(result)) {\n        return result;\n      }\n    }\n  }\n\n  throw new TypeError('No default value');\n};\n\nvar getMethod = function _getMethod(O, P) {\n  var func = O[P];\n  if (isNil(func) === false) {\n    if (isFunction(func) === false) {\n      throw new TypeError(func + ' returned for property ' + P + ' of object ' + O + ' is not a function');\n    }\n\n    return func;\n  }\n\n  return void 0;\n};\n\n// http://www.ecma-international.org/ecma-262/6.0/#sec-toprimitive\n\n/**\n * This method converts a JavaScript object to a primitive value.\n * Note: When toPrimitive is called with no hint, then it generally behaves as\n * if the hint were Number. However, objects may over-ride this behaviour by\n * defining a @@toPrimitive method. Of the objects defined in this specification\n * only Date objects (see 20.3.4.45) and Symbol objects (see 19.4.3.4) over-ride\n * the default ToPrimitive behaviour. Date objects treat no hint as if the hint\n * were String.\n *\n * @param {*} input - The input to convert.\n * @param {constructor} [prefferedtype] - The preffered type (String or Number).\n * @throws {TypeError} If unable to convert input to a primitive.\n * @returns {string|number} The converted input as a primitive.\n * @example\n * var toPrimitive = require('to-primitive-x');\n *\n * var date = new Date(0);\n * toPrimitive(date)); // Thu Jan 01 1970 01:00:00 GMT+0100 (CET)\n * toPrimitive(date, String)); // Thu Jan 01 1970 01:00:00 GMT+0100 (CET)\n * toPrimitive(date, Number)); // 0\n */\nmodule.exports = function toPrimitive(input, preferredType) {\n  if (isPrimitive(input)) {\n    return input;\n  }\n\n  var hint = 'default';\n  if (arguments.length > 1) {\n    if (preferredType === String) {\n      hint = 'string';\n    } else if (preferredType === Number) {\n      hint = 'number';\n    }\n  }\n\n  var exoticToPrim;\n  if (hasSymbols) {\n    if (symToPrimitive) {\n      exoticToPrim = getMethod(input, symToPrimitive);\n    } else if (isSymbol(input)) {\n      exoticToPrim = symValueOf;\n    }\n  }\n\n  if (isUndefined(exoticToPrim) === false) {\n    var result = exoticToPrim.call(input, hint);\n    if (isPrimitive(result)) {\n      return result;\n    }\n\n    throw new TypeError('unable to convert exotic object to primitive');\n  }\n\n  if (hint === 'default' && (isDate(input) || isSymbol(input))) {\n    hint = 'string';\n  }\n\n  return ordinaryToPrimitive(input, hint === 'default' ? 'number' : hint);\n};\n","/**\n * @file Tests if ES6 Symbol is supported.\n * @version 1.4.2\n * @author Xotic750 <Xotic750@gmail.com>\n * @copyright  Xotic750\n * @license {@link <https://opensource.org/licenses/MIT> MIT}\n * @module has-symbol-support-x\n */\n\n'use strict';\n\n/**\n * Indicates if `Symbol`exists and creates the correct type.\n * `true`, if it exists and creates the correct type, otherwise `false`.\n *\n * @type boolean\n */\nmodule.exports = typeof Symbol === 'function' && typeof Symbol('') === 'symbol';\n","/*!\n * is-primitive <https://github.com/jonschlinkert/is-primitive>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\n// see http://jsperf.com/testing-value-is-primitive/7\nmodule.exports = function isPrimitive(value) {\n  return value == null || (typeof value !== 'function' && typeof value !== 'object');\n};\n","/**\n * @file Determine whether a given value is a function object.\n * @version 3.3.0\n * @author Xotic750 <Xotic750@gmail.com>\n * @copyright  Xotic750\n * @license {@link <https://opensource.org/licenses/MIT> MIT}\n * @module is-function-x\n */\n\n'use strict';\n\nvar attempt = require('attempt-x');\nvar fToString = Function.prototype.toString;\nvar toBoolean = require('to-boolean-x');\nvar isFalsey = require('is-falsey-x');\nvar toStringTag = require('to-string-tag-x');\nvar hasToStringTag = require('has-to-string-tag-x');\nvar isPrimitive = require('is-primitive');\nvar normalise = require('normalize-space-x').normalizeSpace;\nvar deComment = require('replace-comments-x');\nvar funcTag = '[object Function]';\nvar genTag = '[object GeneratorFunction]';\nvar asyncTag = '[object AsyncFunction]';\nvar ctrRx = /^class /;\nvar test = ctrRx.test;\n\nvar hasNativeClass = attempt(function () {\n  // eslint-disable-next-line no-new-func\n  return Function('\"use strict\"; return class My {};')();\n}).threw === false;\n\nvar testClassstring = function _testClassstring(value) {\n  return test.call(ctrRx, normalise(deComment(fToString.call(value), ' ')));\n};\n\nvar isES6ClassFn = function isES6ClassFunc(value) {\n  var result = attempt(testClassstring, value);\n\n  return result.threw === false && result.value;\n};\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @private\n * @param {*} value - The value to check.\n * @param {boolean} allowClass - Whether to filter ES6 classes.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n * else `false`.\n */\nvar tryFuncToString = function funcToString(value, allowClass) {\n  if (hasNativeClass && allowClass === false && isES6ClassFn(value)) {\n    return false;\n  }\n\n  return attempt.call(value, fToString).threw === false;\n};\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @param {*} value - The value to check.\n * @param {boolean} [allowClass=false] - Whether to filter ES6 classes.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n * else `false`.\n * @example\n * var isFunction = require('is-function-x');\n *\n * isFunction(); // false\n * isFunction(Number.MIN_VALUE); // false\n * isFunction('abc'); // false\n * isFunction(true); // false\n * isFunction({ name: 'abc' }); // false\n * isFunction(function () {}); // true\n * isFunction(new Function ()); // true\n * isFunction(function* test1() {}); // true\n * isFunction(function test2(a, b) {}); // true\n * isFunction(async function test3() {}); // true\n * isFunction(class Test {}); // false\n * isFunction(class Test {}, true); // true\n * isFunction((x, y) => {return this;}); // true\n */\nmodule.exports = function isFunction(value) {\n  if (isPrimitive(value)) {\n    return false;\n  }\n\n  if (hasToStringTag) {\n    return tryFuncToString(value, toBoolean(arguments[1]));\n  }\n\n  if (hasNativeClass && isFalsey(arguments[1]) && isES6ClassFn(value)) {\n    return false;\n  }\n\n  var strTag = toStringTag(value);\n  return strTag === funcTag || strTag === genTag || strTag === asyncTag;\n};\n","/**\n * @file Invokes function, returning an object of the results.\n * @version 1.1.3\n * @author Xotic750 <Xotic750@gmail.com>\n * @copyright  Xotic750\n * @license {@link <https://opensource.org/licenses/MIT> MIT}\n * @module attempt-x\n */\n\n'use strict';\n\nvar getArgs = function _getArgs(args) {\n  var length = args.length >>> 0;\n  var array = [];\n  var argLength = length - 1;\n  if (argLength < 1) {\n    return array;\n  }\n\n  array.length = argLength;\n  for (var index = 1; index < length; index += 1) {\n    array[index - 1] = args[index];\n  }\n\n  return array;\n};\n\n/**\n * This method attempts to invoke the function, returning either the result or\n * the caught error object. Any additional arguments are provided to the\n * function when it's invoked.\n *\n * @param {Function} fn - The function to attempt.\n * @param {...*} [args] - The arguments to invoke the function with.\n * @returns {Object} Returns an object of the result.\n * @example\n * var attempt = require('attempt-x');\n *\n * function thrower() {\n *   throw new Error('Threw');\n * }\n *\n * attempt(thrower, 1, 2);\n * // {\n * //   threw: true,\n * //   value: // Error('Threw') object\n * // }\n *\n * function sumArgs(a, b) {\n *   return a + b;\n * }\n *\n * attempt(sumArgs, 1, 2);\n * // {\n * //   threw: false,\n * //   value: 3\n * // }\n *\n * var thisArg = [];\n * function pusher(a, b) {\n *   return this.push(a, b);\n * }\n *\n * attempt.call(thisArg, pusher, 1, 2);\n * // {\n * //   threw: false,\n * //   value: 2\n * // }\n * // thisArg => [1, 2];\n */\nmodule.exports = function attempt(fn) {\n  try {\n    return {\n      threw: false,\n      value: fn.apply(this, getArgs(arguments))\n    };\n  } catch (e) {\n    return {\n      threw: true,\n      value: e\n    };\n  }\n};\n","/**\n * @file Test if a given value is falsey.\n * @version 1.0.3\n * @author Xotic750 <Xotic750@gmail.com>\n * @copyright  Xotic750\n * @license {@link <https://opensource.org/licenses/MIT> MIT}\n * @module is-falsey-x\n */\n\n'use strict';\n\nvar toBoolean = require('to-boolean-x');\n\n/**\n * This method tests if a given value is falsey.\n *\n * @param {*} value - The value to test.\n * @returns {boolean} `true` if the value is falsey: otherwise `false`.\n * @example\n * var isFalsey = require('is-falsey-x');\n *\n * isFalsey(); // true\n * isFalsey(0); // true\n * isFalsey(''); // true\n * isFalsey(false); // true\n * isFalsey(null); // true\n *\n * isFalsey(true); // false\n * isFalsey([]); // false\n * isFalsey(1); // false\n * isFalsey(function () {}); // false\n */\nmodule.exports = function isFalsey(value) {\n  return toBoolean(value) === false;\n};\n","/**\n * @file Get an object's ES6 @@toStringTag.\n * @see {@link http://www.ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring|19.1.3.6 Object.prototype.toString ( )}\n * @version 1.4.3\n * @author Xotic750 <Xotic750@gmail.com>\n * @copyright  Xotic750\n * @license {@link <https://opensource.org/licenses/MIT> MIT}\n * @module to-string-tag-x\n */\n\n'use strict';\n\nvar isNull = require('lodash.isnull');\nvar isUndefined = require('validate.io-undefined');\nvar toStr = {}.toString;\n\n/**\n * The `toStringTag` method returns \"[object type]\", where type is the\n * object type.\n *\n * @param {*} value - The object of which to get the object type string.\n * @returns {string} The object type string.\n * @example\n * var toStringTag = require('to-string-tag-x');\n *\n * var o = new Object();\n * toStringTag(o); // returns '[object Object]'\n */\nmodule.exports = function toStringTag(value) {\n  if (isNull(value)) {\n    return '[object Null]';\n  }\n\n  if (isUndefined(value)) {\n    return '[object Undefined]';\n  }\n\n  return toStr.call(value);\n};\n","/**\n * @file Tests if ES6 @@toStringTag is supported.\n * @see {@link http://www.ecma-international.org/ecma-262/6.0/#sec-@@tostringtag|26.3.1 @@toStringTag}\n * @version 1.4.1\n * @author Xotic750 <Xotic750@gmail.com>\n * @copyright  Xotic750\n * @license {@link <https://opensource.org/licenses/MIT> MIT}\n * @module has-to-string-tag-x\n */\n\n'use strict';\n\n/**\n * Indicates if `Symbol.toStringTag`exists and is the correct type.\n * `true`, if it exists and is the correct type, otherwise `false`.\n *\n * @type boolean\n */\nmodule.exports = require('has-symbol-support-x') && typeof Symbol.toStringTag === 'symbol';\n","/**\n * @file Tests if ES6 Symbol is supported.\n * @version 1.4.2\n * @author Xotic750 <Xotic750@gmail.com>\n * @copyright  Xotic750\n * @license {@link <https://opensource.org/licenses/MIT> MIT}\n * @module has-symbol-support-x\n */\n\n'use strict';\n\n/**\n * Indicates if `Symbol`exists and creates the correct type.\n * `true`, if it exists and creates the correct type, otherwise `false`.\n *\n * @type boolean\n */\nmodule.exports = typeof Symbol === 'function' && typeof Symbol('') === 'symbol';\n","/*!\n * is-primitive <https://github.com/jonschlinkert/is-primitive>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\n// see http://jsperf.com/testing-value-is-primitive/7\nmodule.exports = function isPrimitive(value) {\n  return value == null || (typeof value !== 'function' && typeof value !== 'object');\n};\n","/**\n * @file Trims and replaces sequences of whitespace characters by a single space.\n * @version 3.0.0\n * @author Xotic750 <Xotic750@gmail.com>\n * @copyright  Xotic750\n * @license {@link <https://opensource.org/licenses/MIT> MIT}\n * @module normalize-space-x\n */\n\n'use strict';\n\nvar libTrim = require('trim-x');\nvar trim2016 = libTrim.trim2016;\nvar trim2018 = libTrim.trim2018;\nvar Rx = require('cached-constructors-x').RegExp;\nvar libWhiteSpace = require('white-space-x');\nvar reNormalize2016 = new Rx('[' + libWhiteSpace.string2016 + ']+', 'g');\nvar reNormalize2018 = new Rx('[' + libWhiteSpace.string2018 + ']+', 'g');\nvar replace = ''.replace;\n\nvar $normalizeSpace2016 = function normalizeSpace2016(string) {\n  return replace.call(trim2016(string), reNormalize2016, ' ');\n};\n\nvar $normalizeSpace2018 = function normalizeSpace2018(string) {\n  return replace.call(trim2018(string), reNormalize2018, ' ');\n};\n\nmodule.exports = {\n  /**\n   * Reference to normalizeSpace2018.\n   */\n  normalizeSpace: $normalizeSpace2018,\n\n  /**\n   * This method strips leading and trailing white-space from a string,\n   * replaces sequences of whitespace characters by a single space,\n   * and returns the resulting string. (ES2016)\n   *\n   * @param {string} string - The string to be normalized.\n   * @throws {TypeError} If string is null or undefined or not coercible.\n   * @returns {string} The normalized string.\n   * @example\n   * var normalizeSpace = require('normalize-space-x');\n   *\n   * normalizeSpace(' \\t\\na \\t\\nb \\t\\n') === 'a b'; // true\n   */\n  normalizeSpace2016: $normalizeSpace2016,\n\n  /**\n   * This method strips leading and trailing white-space from a string,\n   * replaces sequences of whitespace characters by a single space,\n   * and returns the resulting string. (ES2018)\n   *\n   * @param {string} string - The string to be normalized.\n   * @throws {TypeError} If string is null or undefined or not coercible.\n   * @returns {string} The normalized string.\n   * @example\n   * var normalizeSpace = require('normalize-space-x');\n   *\n   * normalizeSpace(' \\t\\na \\t\\nb \\t\\n') === 'a b'; // true\n   */\n  normalizeSpace2018: $normalizeSpace2018\n};\n","/**\n * @file This method removes whitespace from the right end of a string.\n * @version 3.0.0\n * @author Xotic750 <Xotic750@gmail.com>\n * @copyright  Xotic750\n * @license {@link <https://opensource.org/licenses/MIT> MIT}\n * @module trim-right-x\n */\n\n'use strict';\n\nvar requireCoercibleToString = require('require-coercible-to-string-x');\nvar Rx = require('cached-constructors-x').RegExp;\nvar reRight2016 = new Rx('[' + require('white-space-x').string2016 + ']+$');\nvar reRight2018 = new Rx('[' + require('white-space-x').string2018 + ']+$');\nvar replace = ''.replace;\n\nvar $trimRight2016 = function trimRight2016(string) {\n  return replace.call(requireCoercibleToString(string), reRight2016, '');\n};\n\nvar $trimRight2018 = function trimRight2018(string) {\n  return replace.call(requireCoercibleToString(string), reRight2018, '');\n};\n\nmodule.exports = {\n  /**\n   * A reference to trimRight2018.\n   */\n  trimRight: $trimRight2018,\n\n  /**\n   * This method removes whitespace from the right end of a string. (ES2016)\n   *\n   * @param {string} string - The string to trim the right end whitespace from.\n   * @throws {TypeError} If string is null or undefined or not coercible.\n   * @returns {string} The right trimmed string.\n   * @example\n   * var trimRight = require('trim-right-x');\n   *\n   * trimRight(' \\t\\na \\t\\n') === ' \\t\\na'; // true\n   */\n  trimRight2016: $trimRight2016,\n\n  /**\n   * This method removes whitespace from the right end of a string. (ES2018)\n   *\n   * @param {string} string - The string to trim the right end whitespace from.\n   * @throws {TypeError} If string is null or undefined or not coercible.\n   * @returns {string} The right trimmed string.\n   * @example\n   * var trimRight = require('trim-right-x');\n   *\n   * trimRight(' \\t\\na \\t\\n') === ' \\t\\na'; // true\n   */\n  trimRight2018: $trimRight2018\n};\n","/**\n * @file Replace the comments in a string.\n * @version 2.0.0\n * @author Xotic750 <Xotic750@gmail.com>\n * @copyright  Xotic750\n * @license {@link <https://opensource.org/licenses/MIT> MIT}\n * @module replace-comments-x\n */\n\n'use strict';\n\nvar toStr = require('to-string-x');\nvar requireCoercibleToString = require('require-coercible-to-string-x');\nvar STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\nvar replace = ''.replace;\n\n/**\n * This method replaces comments in a string.\n *\n * @param {string} string - The string to be stripped.\n * @param {string} [replacement] - The string to be used as a replacement.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @throws {TypeError} If replacement is not coercible.\n * @returns {string} The new string with the comments replaced.\n * @example\n * var replaceComments = require('replace-comments-x');\n *\n * replaceComments(test;/* test * /, ''), // 'test;'\n * replaceComments(test; // test, ''), // 'test;'\n */\nmodule.exports = function replaceComments(string) {\n  return replace.call(requireCoercibleToString(string), STRIP_COMMENTS, arguments.length > 1 ? toStr(arguments[1]) : '');\n};\n","/**\n * @file Parses a string argument and returns an integer of the specified radix.\n * @version 2.0.0\n * @author Xotic750 <Xotic750@gmail.com>\n * @copyright  Xotic750\n * @license {@link <https://opensource.org/licenses/MIT> MIT}\n * @module parse-int-x\n */\n\n'use strict';\n\nvar nativeParseInt = parseInt;\nvar NAN = require('nan-x');\nvar toStr = require('to-string-x');\nvar trimLeft2016 = require('trim-left-x').trimLeft2016;\nvar trimLeft2018 = require('trim-left-x').trimLeft2018;\nvar chachedCtrs = require('cached-constructors-x');\nvar castNumber = chachedCtrs.Number;\nvar charAt = chachedCtrs.String.prototype.charAt;\nvar hexRegex = /^[-+]?0[xX]/;\nvar test = hexRegex.test;\n\nvar $parseInt2016 = function parseInt2016(string, radix) {\n  var str = trimLeft2016(toStr(string));\n\n  return nativeParseInt(str, castNumber(radix) || (test.call(hexRegex, str) ? 16 : 10));\n};\n\nvar $parseInt2018 = function parseInt2018(string, radix) {\n  var str = trimLeft2018(toStr(string));\n  if (charAt.call(str, 0) === '\\u180E') {\n    return NAN;\n  }\n\n  return nativeParseInt(str, castNumber(radix) || (test.call(hexRegex, str) ? 16 : 10));\n};\n\nmodule.exports = {\n  /**\n   * Reference to parseInt2018.\n   */\n  parseInt: $parseInt2018,\n\n  /**\n   * This method parses a string argument and returns an integer of the specified\n   * radix (the base in mathematical numeral systems). (ES2016)\n   *\n   * @param {string} string - The value to parse. If the string argument is not a\n   *  string, then it is converted to a string (using the ToString abstract\n   *  operation). Leading whitespace in the string argument is ignored.\n   * @param {number} radix - An integer between 2 and 36 that represents the radix\n   *  (the base in mathematical numeral systems) of the above mentioned string.\n   *  Specify 10 for the decimal numeral system commonly used by humans. Always\n   *  specify this parameter to eliminate reader confusion and to guarantee\n   *  predictable behavior. Different implementations produce different results\n   *  when a radix is not specified, usually defaulting the value to 10.\n   * @throws {TypeError} If target is a Symbol or is not coercible.\n   * @returns {number} An integer number parsed from the given string. If the first\n   *  character cannot be converted to a number, NaN is returned.\n   * @example\n   * var $parseInt = require('parse-int-x').parseInt2016;\n   *\n   * // The following examples all return 15\n   * $parseInt(' 0xF', 16);\n   * $parseInt(' F', 16);\n   * $parseInt('17', 8);\n   * $parseInt(021, 8);\n   * $parseInt('015', 10);   // $parseInt(015, 10); will return 15\n   * $parseInt(15.99, 10);\n   * $parseInt('15,123', 10);\n   * $parseInt('FXX123', 16);\n   * $parseInt('1111', 2);\n   * $parseInt('15 * 3', 10);\n   * $parseInt('15e2', 10);\n   * $parseInt('15px', 10);\n   * $parseInt('12', 13);\n   *\n   * //The following examples all return NaN:\n   * $parseInt('Hello', 8); // Not a number at all\n   * $parseInt('546', 2);   // Digits are not valid for binary representations\n   */\n  parseInt2016: $parseInt2016,\n\n  /**\n   * This method parses a string argument and returns an integer of the specified\n   * radix (the base in mathematical numeral systems). (ES2018)\n   *\n   * @param {string} string - The value to parse. If the string argument is not a\n   *  string, then it is converted to a string (using the ToString abstract\n   *  operation). Leading whitespace in the string argument is ignored.\n   * @param {number} radix - An integer between 2 and 36 that represents the radix\n   *  (the base in mathematical numeral systems) of the above mentioned string.\n   *  Specify 10 for the decimal numeral system commonly used by humans. Always\n   *  specify this parameter to eliminate reader confusion and to guarantee\n   *  predictable behavior. Different implementations produce different results\n   *  when a radix is not specified, usually defaulting the value to 10.\n   * @throws {TypeError} If target is a Symbol or is not coercible.\n   * @returns {number} An integer number parsed from the given string. If the first\n   *  character cannot be converted to a number, NaN is returned.\n   * @example\n   * var $parseInt = require('parse-int-x').parseInt2018;\n   *\n   * // The following examples all return 15\n   * $parseInt(' 0xF', 16);\n   * $parseInt(' F', 16);\n   * $parseInt('17', 8);\n   * $parseInt(021, 8);\n   * $parseInt('015', 10);   // $parseInt(015, 10); will return 15\n   * $parseInt(15.99, 10);\n   * $parseInt('15,123', 10);\n   * $parseInt('FXX123', 16);\n   * $parseInt('1111', 2);\n   * $parseInt('15 * 3', 10);\n   * $parseInt('15e2', 10);\n   * $parseInt('15px', 10);\n   * $parseInt('12', 13);\n   *\n   * //The following examples all return NaN:\n   * $parseInt('Hello', 8); // Not a number at all\n   * $parseInt('546', 2);   // Digits are not valid for binary representations\n   */\n  parseInt2018: $parseInt2018\n};\n","/**\n * @file ES6-compliant shim for Number.isFinite.\n * @see {@link http://www.ecma-international.org/ecma-262/6.0/#sec-number.isfinite|20.1.2.2 Number.isFinite ( number )}\n * @version 3.0.4\n * @author Xotic750 <Xotic750@gmail.com>\n * @copyright  Xotic750\n * @license {@link <https://opensource.org/licenses/MIT> MIT}\n * @module is-finite-x\n */\n\n'use strict';\n\nvar numberIsNaN = require('is-nan-x');\nvar INFINITY = require('infinity-x');\n\n/**\n * This method determines whether the passed value is a finite number.\n *\n * @param {*} number - The value to be tested for finiteness.\n * @returns {boolean} A Boolean indicating whether or not the given value is a finite number.\n * @example\n * var numIsFinite = require('is-finite-x');\n *\n * numIsFinite(Infinity);  // false\n * numIsFinite(NaN);       // false\n * numIsFinite(-Infinity); // false\n *\n * numIsFinite(0);         // true\n * numIsFinite(2e64);      // true\n *\n * numIsFinite('0');       // false, would've been true with\n *                         // global isFinite('0')\n * numIsFinite(null);      // false, would've been true with\n */\nmodule.exports = function isFinite(number) {\n  return typeof number === 'number' && numberIsNaN(number) === false && number !== INFINITY && number !== -INFINITY;\n};\n","/**\n * @file The constant value Infinity.\n * @version 1.0.2\n * @author Xotic750 <Xotic750@gmail.com>\n * @copyright  Xotic750\n * @license {@link <https://opensource.org/licenses/MIT> MIT}\n * @module infinity-x\n */\n\n'use strict';\n\n/**\n * The constant value Infinity derived mathematically by 1 / 0.\n *\n * @type number\n * @example\n * var INFINITY = require('infinity-x');\n *\n * INFINITY === Infinity; // true\n * -INFINITY === -Infinity; // true\n * INFINITY === -Infinity; // false\n */\nmodule.exports = 1 / 0;\n","/**\n * @file Shim for Math.sign.\n * @see {@link http://www.ecma-international.org/ecma-262/6.0/#sec-math.sign|20.2.2.29 Math.sign(x)}\n * @version 3.0.0\n * @author Xotic750 <Xotic750@gmail.com>\n * @copyright  Xotic750\n * @license {@link <https://opensource.org/licenses/MIT> MIT}\n * @module math-sign-x\n */\n\n'use strict';\n\nvar libToNumber = require('to-number-x');\nvar toNumber2016 = libToNumber.toNumber2016;\nvar toNumber2018 = libToNumber.toNumber2018;\nvar numberIsNaN = require('is-nan-x');\n\nvar $sign2016 = function sign2016(x) {\n  var n = toNumber2016(x);\n  if (n === 0 || numberIsNaN(n)) {\n    return n;\n  }\n\n  return n > 0 ? 1 : -1;\n};\n\nvar $sign2018 = function sign2018(x) {\n  var n = toNumber2018(x);\n  if (n === 0 || numberIsNaN(n)) {\n    return n;\n  }\n\n  return n > 0 ? 1 : -1;\n};\n\nmodule.exports = {\n  /**\n   * Reference to sign2018.\n   */\n  sign: $sign2018,\n\n  /**\n   * This method returns the sign of a number, indicating whether the number is positive,\n   * negative or zero. (ES2016)\n   *\n   * @param {*} x - A number.\n   * @returns {number} A number representing the sign of the given argument. If the argument\n   * is a positive number, negative number, positive zero or negative zero, the function will\n   * return 1, -1, 0 or -0 respectively. Otherwise, NaN is returned.\n   * @example\n   * var mathSign = require('math-sign-x').sign2016;\n   *\n   * mathSign(3);     //  1\n   * mathSign(-3);    // -1\n   * mathSign('-3');  // -1\n   * mathSign(0);     //  0\n   * mathSign(-0);    // -0\n   * mathSign(NaN);   // NaN\n   * mathSign('foo'); // NaN\n   * mathSign();      // NaN\n   */\n  sign2016: $sign2016,\n\n  /**\n   * This method returns the sign of a number, indicating whether the number is positive,\n   * negative or zero. (ES2018)\n   *\n   * @param {*} x - A number.\n   * @returns {number} A number representing the sign of the given argument. If the argument\n   * is a positive number, negative number, positive zero or negative zero, the function will\n   * return 1, -1, 0 or -0 respectively. Otherwise, NaN is returned.\n   * @example\n   * var mathSign = require('math-sign-x').sign2018;\n   *\n   * mathSign(3);     //  1\n   * mathSign(-3);    // -1\n   * mathSign('-3');  // -1\n   * mathSign(0);     //  0\n   * mathSign(-0);    // -0\n   * mathSign(NaN);   // NaN\n   * mathSign('foo'); // NaN\n   * mathSign();      // NaN\n   */\n  sign2018: $sign2018\n};\n","/**\n * @file Clamp a number to limits.\n * @version 1.2.0\n * @author Xotic750 <Xotic750@gmail.com>\n * @copyright  Xotic750\n * @license {@link <https://opensource.org/licenses/MIT> MIT}\n * @module math-clamp-x\n */\n\n'use strict';\n\nvar toNumber = require('to-number-x').toNumber2018;\n\n/**\n * This method clamp a number to min and max limits inclusive.\n *\n * @param {number} value - The number to be clamped.\n * @param {number} [min=0] - The minimum number.\n * @param {number} max - The maximum number.\n * @throws {RangeError} If min > max.\n * @return {number} The clamped number.\n * @example\n * var mathClamp = require('math-clamp-x');\n */\nmodule.exports = function clamp(value) {\n  var number = toNumber(value);\n  var argsLength = arguments.length;\n  if (argsLength < 2) {\n    return number;\n  }\n\n  var min = toNumber(arguments[1]);\n  var max;\n  if (argsLength < 3) {\n    max = min;\n    min = 0;\n  } else {\n    max = toNumber(arguments[2]);\n  }\n\n  if (min > max) {\n    throw new RangeError('\"min\" must be less than \"max\"');\n  }\n\n  if (number < min) {\n    return min;\n  }\n\n  if (number > max) {\n    return max;\n  }\n\n  return number;\n};\n","'use strict';\nmodule.exports = 9007199254740991;\n","import requireObjectCoercible from 'require-object-coercible-x';\n\nconst castObject = {}.constructor;\n\n/**\n * The abstract operation ToObject converts argument to a value of\n * type Object.\n *\n * @param {*} value - The `value` to convert.\n * @throws {TypeError} If `value` is a `null` or `undefined`.\n * @returns {!object} The `value` converted to an object.\n */\nexport default function toObject(value) {\n  return castObject(requireObjectCoercible(value));\n}\n","import isNil from 'is-nil-x';\n\n/**\n * The abstract operation RequireObjectCoercible throws an error if argument\n * is a value that cannot be converted to an Object using ToObject.\n *\n * @param {*} [value] - The `value` to check.\n * @throws {TypeError} If `value` is a `null` or `undefined`.\n * @returns {string} The `value`.\n */\nexport default function requireObjectCoercible(value) {\n  if (isNil(value)) {\n    throw new TypeError(`Cannot call method on ${value}`);\n  }\n\n  return value;\n}\n","/**\n * Checks if `value` is `null` or `undefined`.\n *\n * @param {*} [value] - The value to check.\n * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n */\nexport default function isNil(value) {\n  /* eslint-disable-next-line lodash/prefer-is-nil */\n  return value === null || typeof value === 'undefined';\n}\n","/**\n * This method attempts to invoke the function, returning either the result or\n * the caught error object. Any additional arguments are provided to the\n * function when it's invoked.\n *\n * @param {Function} [fn] - The function to attempt.\n * @param {...*} [args] - The arguments to invoke the function with.\n * @returns {object} Returns an object of the result.\n */\nexport default function attempt(fn, ...args) {\n  try {\n    return {\n      threw: false,\n      /* eslint-disable-next-line babel/no-invalid-this */\n      value: fn.apply(this, args),\n    };\n  } catch (e) {\n    return {\n      threw: true,\n      value: e,\n    };\n  }\n}\n","import attempt from 'attempt-x';\nimport isSymbol from 'is-symbol';\n\nconst hasSymbolSupport = attempt(() => {\n  /* eslint-disable-next-line compat/compat */\n  return typeof Symbol === 'function' && isSymbol(Symbol(''));\n});\n\n/**\n * Indicates if `Symbol`exists and creates the correct type.\n * `true`, if it exists and creates the correct type, otherwise `false`.\n *\n * @type boolean\n */\nexport default hasSymbolSupport.threw === false && hasSymbolSupport.value === true;\n","import toBoolean from 'to-boolean-x';\n\n/**\n * This method tests if a given value is falsey.\n *\n * @param {*} [value] - The value to test.\n * @returns {boolean} `true` if the value is falsey: otherwise `false`.\n */\nexport default function isFalsey(value) {\n  return !toBoolean(value);\n}\n","/**\n * The abstract operation ToBoolean converts argument to a value of type Boolean.\n *\n * @param {*} [value] - The value to be converted.\n * @returns {boolean} 'true' if value is truthy; otherwise 'false'.\n */\nexport default function toBoolean(value) {\n  return !!value;\n}\n","const nativeObjectToString = {}.toString;\n\n/**\n * The `toStringTag` method returns \"[object type]\", where type is the\n * object type.\n *\n * @param {*} [value] - The object of which to get the object type string.\n * @returns {string} The object type string.\n */\nexport default function toStringTag(value) {\n  if (value === null) {\n    return '[object Null]';\n  }\n\n  if (typeof value === 'undefined') {\n    return '[object Undefined]';\n  }\n\n  return nativeObjectToString.call(value);\n}\n","import hasSymbols from 'has-symbol-support-x';\nimport isSymbol from 'is-symbol';\n\n/**\n * Indicates if `Symbol.toStringTag`exists and is the correct type.\n * `true`, if it exists and is the correct type, otherwise `false`.\n *\n * @type boolean\n */\nexport default hasSymbols &&\n  /* eslint-disable-next-line compat/compat */\n  isSymbol(Symbol.toStringTag);\n","import isSymbol from 'is-symbol';\n\nconst ERROR_MESSAGE = 'Cannot convert a Symbol value to a string';\nconst castString = ERROR_MESSAGE.constructor;\n/**\n * The abstract operation ToString converts argument to a value of type String.\n *\n * @param {*} [value] - The value to convert to a string.\n * @throws {TypeError} If `value` is a Symbol.\n * @returns {string} The converted value.\n */\nexport default function ToString(value) {\n  if (isSymbol(value)) {\n    throw new TypeError(ERROR_MESSAGE);\n  }\n\n  return castString(value);\n}\n","import requireObjectCoercible from 'require-object-coercible-x';\nimport toStr from 'to-string-x';\n\n/**\n * This method requires an argument is corecible then converts using ToString.\n *\n * @param {*} [value] - The value to converted to a string.\n * @throws {TypeError} If value is null or undefined.\n * @returns {string} The value as a string.\n */\nexport default function requireCoercibleToString(value) {\n  return toStr(requireObjectCoercible(value));\n}\n","/**\n * A record of a white space character.\n *\n * @typedef {object} CharRecord\n * @property {number} code - The character code.\n * @property {string} description - A description of the character.\n * @property {boolean} es5 - Whether the spec lists this as a white space.\n * @property {boolean} es2015 - Whether the spec lists this as a white space.\n * @property {boolean} es2016 - Whether the spec lists this as a white space.\n * @property {boolean} es2017 - Whether the spec lists this as a white space.\n * @property {boolean} es2018 - Whether the spec lists this as a white space.\n * @property {string} string - The character string.\n */\n\n/**\n * An array of the whitespace char codes, string, descriptions and language\n * presence in the specifications.\n *\n * @type Array.<CharRecord>\n */\nexport const list = [\n  {\n    code: 0x0009,\n    description: 'Tab',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u0009',\n  },\n  {\n    code: 0x000a,\n    description: 'Line Feed',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u000a',\n  },\n  {\n    code: 0x000b,\n    description: 'Vertical Tab',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u000b',\n  },\n  {\n    code: 0x000c,\n    description: 'Form Feed',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u000c',\n  },\n  {\n    code: 0x000d,\n    description: 'Carriage Return',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u000d',\n  },\n  {\n    code: 0x0020,\n    description: 'Space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u0020',\n  },\n  /*\n  {\n    code: 0x0085,\n    description: 'Next line',\n    es5: false,\n    es2015: false,\n    es2016: false,\n    es2017: false,\n    es2018: false,\n    string: '\\u0085'\n  }\n  */\n  {\n    code: 0x00a0,\n    description: 'No-break space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u00a0',\n  },\n  {\n    code: 0x1680,\n    description: 'Ogham space mark',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u1680',\n  },\n  {\n    code: 0x180e,\n    description: 'Mongolian vowel separator',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: false,\n    es2018: false,\n    string: '\\u180e',\n  },\n  {\n    code: 0x2000,\n    description: 'En quad',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2000',\n  },\n  {\n    code: 0x2001,\n    description: 'Em quad',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2001',\n  },\n  {\n    code: 0x2002,\n    description: 'En space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2002',\n  },\n  {\n    code: 0x2003,\n    description: 'Em space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2003',\n  },\n  {\n    code: 0x2004,\n    description: 'Three-per-em space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2004',\n  },\n  {\n    code: 0x2005,\n    description: 'Four-per-em space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2005',\n  },\n  {\n    code: 0x2006,\n    description: 'Six-per-em space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2006',\n  },\n  {\n    code: 0x2007,\n    description: 'Figure space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2007',\n  },\n  {\n    code: 0x2008,\n    description: 'Punctuation space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2008',\n  },\n  {\n    code: 0x2009,\n    description: 'Thin space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2009',\n  },\n  {\n    code: 0x200a,\n    description: 'Hair space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u200a',\n  },\n  /*\n  {\n    code: 0x200b,\n    description: 'Zero width space',\n    es5: false,\n    es2015: false,\n    es2016: false,\n    es2017: false,\n    es2018: false,\n    string: '\\u200b'\n  },\n  */\n  {\n    code: 0x2028,\n    description: 'Line separator',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2028',\n  },\n  {\n    code: 0x2029,\n    description: 'Paragraph separator',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u2029',\n  },\n  {\n    code: 0x202f,\n    description: 'Narrow no-break space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u202f',\n  },\n  {\n    code: 0x205f,\n    description: 'Medium mathematical space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u205f',\n  },\n  {\n    code: 0x3000,\n    description: 'Ideographic space',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\u3000',\n  },\n  {\n    code: 0xfeff,\n    description: 'Byte Order Mark',\n    es5: true,\n    es2015: true,\n    es2016: true,\n    es2017: true,\n    es2018: true,\n    string: '\\ufeff',\n  },\n];\n\n/**\n * A string of the ES5 to ES2016 whitespace characters.\n *\n * @type string\n */\nlet stringES2016 = '';\n\n/**\n * A string of the ES2017 to ES2018 whitespace characters.\n *\n * @type string\n */\nlet stringES2018 = '';\nconst {length} = list;\nfor (let i = 0; i < length; i += 1) {\n  if (list[i].es2016) {\n    stringES2016 += list[i].string;\n  }\n\n  if (list[i].es2018) {\n    stringES2018 += list[i].string;\n  }\n}\n\nconst string2018 = stringES2018;\n\nexport default string2018;\nexport const string2016 = stringES2016;\n","import requireCoercibleToString from 'require-coercible-to-string-x';\nimport whiteSpace, {string2016} from 'white-space-x';\n\nconst EMPTY_STRING = '';\nconst RegExpCtr = /none/.constructor;\nconst reLeft2016 = new RegExpCtr(`^[${string2016}]+`);\nconst reLeft = new RegExpCtr(`^[${whiteSpace}]+`);\nconst {replace} = EMPTY_STRING;\n\n/**\n * This method removes whitespace from the left end of a string. (ES2016).\n *\n * @param {string} [string] - The string to trim the left end whitespace from.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @returns {string} The left trimmed string.\n */\nexport function trimLeft2016(string) {\n  return replace.call(requireCoercibleToString(string), reLeft2016, EMPTY_STRING);\n}\n\n/**\n * This method removes whitespace from the left end of a string. (ES2018).\n *\n * @param {string} [string] - The string to trim the left end whitespace from.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @returns {string} The left trimmed string.\n */\nexport default function trimLeft2018(string) {\n  return replace.call(requireCoercibleToString(string), reLeft, EMPTY_STRING);\n}\n","import requireCoercibleToString from 'require-coercible-to-string-x';\nimport whiteSpace, {string2016} from 'white-space-x';\n\nconst EMPTY_STRING = '';\nconst RegExpCtr = /none/.constructor;\nconst reRight2016 = new RegExpCtr(`[${string2016}]+$`);\nconst reRight2018 = new RegExpCtr(`[${whiteSpace}]+$`);\nconst {replace} = EMPTY_STRING;\n\n/**\n * This method removes whitespace from the right end of a string. (ES2016).\n *\n * @param {string} [string] - The string to trim the right end whitespace from.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @returns {string} The right trimmed string.\n */\nexport function trimRight2016(string) {\n  return replace.call(requireCoercibleToString(string), reRight2016, EMPTY_STRING);\n}\n\n/**\n * This method removes whitespace from the right end of a string. (ES2018).\n *\n * @param {string} [string] - The string to trim the right end whitespace from.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @returns {string} The right trimmed string.\n */\nexport default function trimRight2018(string) {\n  return replace.call(requireCoercibleToString(string), reRight2018, EMPTY_STRING);\n}\n","import trimLeft, {trimLeft2016} from 'trim-left-x';\nimport trimRight, {trimRight2016} from 'trim-right-x';\n\n/**\n * This method removes whitespace from the left and right end of a string.\n * (ES2016).\n *\n * @param {string} [string] - The string to trim the whitespace from.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @returns {string} The trimmed string.\n */\nexport function trim2016(string) {\n  return trimLeft2016(trimRight2016(string));\n}\n\n/**\n * This method removes whitespace from the left and right end of a string.\n * (ES2018).\n *\n * @param {string} [string] - The string to trim the whitespace from.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @returns {string} The trimmed string.\n */\nexport default function trim2018(string) {\n  return trimLeft(trimRight(string));\n}\n","import trim, {trim2016} from 'trim-x';\nimport whiteSpace, {string2016} from 'white-space-x';\n\nconst SPACE = ' ';\nconst RegExpCtr = /none/.constructor;\nconst reNormalize2016 = new RegExpCtr(`[${string2016}]+`, 'g');\nconst reNormalize2018 = new RegExpCtr(`[${whiteSpace}]+`, 'g');\nconst {replace} = SPACE;\n\n/**\n * This method strips leading and trailing white-space from a string,\n * replaces sequences of whitespace characters by a single space,\n * and returns the resulting string. (ES2016).\n *\n * @param {string} [string] - The string to be normalized.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @returns {string} The normalized string.\n */\nexport function normalizeSpace2016(string) {\n  return replace.call(trim2016(string), reNormalize2016, SPACE);\n}\n\n/**\n * This method strips leading and trailing white-space from a string,\n * replaces sequences of whitespace characters by a single space,\n * and returns the resulting string. (ES2018).\n *\n * @param {string} [string] - The string to be normalized.\n * @throws {TypeError} If string is null or undefined or not coercible.\n */\nexport default function normalizeSpace2018(string) {\n  return replace.call(trim(string), reNormalize2018, SPACE);\n}\n","import toStr from 'to-string-x';\nimport requireCoercibleToString from 'require-coercible-to-string-x';\n\nconst EMPTY_STRING = '';\nconst STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/gm;\nconst {replace} = EMPTY_STRING;\n\n/**\n * This method replaces comments in a string.\n *\n * @param {string} [string] - The string to be stripped.\n * @param {string} [replacement=''] - The string to be used as a replacement.\n * @throws {TypeError} If string is null or undefined or not coercible.\n * @throws {TypeError} If replacement is not coercible.\n * @returns {string} The new string with the comments replaced.\n */\nexport default function replaceComments(string, replacement) {\n  return replace.call(requireCoercibleToString(string), STRIP_COMMENTS, arguments.length > 1 ? toStr(replacement) : EMPTY_STRING);\n}\n","import attempt from 'attempt-x';\nimport toBoolean from 'to-boolean-x';\nimport isFalsey from 'is-falsey-x';\nimport toStringTag from 'to-string-tag-x';\nimport hasToStringTag from 'has-to-string-tag-x';\nimport isPrimitive from 'is-primitive';\nimport normalise from 'normalize-space-x';\nimport deComment from 'replace-comments-x';\n\nconst SPACE = ' ';\nconst fToString = Function.prototype.toString;\nconst funcTag = '[object Function]';\nconst genTag = '[object GeneratorFunction]';\nconst asyncTag = '[object AsyncFunction]';\nconst ctrRx = /^class /;\nconst {test} = ctrRx;\n\nconst hasNativeClass =\n  attempt(() => {\n    /* eslint-disable-next-line no-new-func */\n    return Function('\"use strict\"; return class My {};')();\n  }).threw === false;\n\nconst testClassstring = function _testClassstring(value) {\n  return test.call(ctrRx, normalise(deComment(fToString.call(value), SPACE)));\n};\n\nconst isES6ClassFn = function isES6ClassFunc(value) {\n  const result = attempt(testClassstring, value);\n\n  return result.threw === false && result.value;\n};\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @private\n * @param {*} value - The value to check.\n * @param {boolean} allowClass - Whether to filter ES6 classes.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n * else `false`.\n */\nconst tryFuncToString = function funcToString(value, allowClass) {\n  if (hasNativeClass && allowClass === false && isES6ClassFn(value)) {\n    return false;\n  }\n\n  return attempt.call(value, fToString).threw === false;\n};\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @param {*} value - The value to check.\n * @param {boolean} [allowClass=false] - Whether to filter ES6 classes.\n * @returns {boolean} Returns `true` if `value` is correctly classified,\n * else `false`.\n */\nexport default function isFunction(value, allowClass) {\n  if (isPrimitive(value)) {\n    return false;\n  }\n\n  if (hasToStringTag) {\n    return tryFuncToString(value, toBoolean(allowClass));\n  }\n\n  if (hasNativeClass && isFalsey(allowClass) && isES6ClassFn(value)) {\n    return false;\n  }\n\n  const strTag = toStringTag(value);\n\n  return strTag === funcTag || strTag === genTag || strTag === asyncTag;\n}\n","import hasSymbols from 'has-symbol-support-x';\nimport isPrimitive from 'is-primitive';\nimport isDate from 'is-date-object';\nimport isSymbol from 'is-symbol';\nimport isFunction from 'is-function-x';\nimport requireObjectCoercible from 'require-object-coercible-x';\nimport isNil from 'is-nil-x';\n\nconst ZERO = 0;\nconst ONE = 1;\n/* eslint-disable-next-line no-void */\nconst UNDEFINED = void ZERO;\nconst NUMBER = 'number';\nconst STRING = 'string';\nconst DEFAULT = 'default';\n/** @type {StringConstructor} */\nconst StringCtr = STRING.constructor;\n/** @type {NumberConstructor} */\nconst NumberCtr = ZERO.constructor;\n/* eslint-disable-next-line compat/compat */\nconst symToPrimitive = hasSymbols && Symbol.toPrimitive;\n/* eslint-disable-next-line compat/compat */\nconst symValueOf = hasSymbols && Symbol.prototype.valueOf;\n\nconst toStringOrder = ['toString', 'valueOf'];\nconst toNumberOrder = ['valueOf', 'toString'];\nconst orderLength = 2;\n\n/**\n * @param {*} ordinary - The ordinary to convert.\n * @param {*} hint - The hint.\n * @returns {*} - The primitive.\n */\nconst ordinaryToPrimitive = function _ordinaryToPrimitive(ordinary, hint) {\n  requireObjectCoercible(ordinary);\n\n  if (typeof hint !== 'string' || (hint !== NUMBER && hint !== STRING)) {\n    throw new TypeError('hint must be \"string\" or \"number\"');\n  }\n\n  const methodNames = hint === STRING ? toStringOrder : toNumberOrder;\n  let method;\n  let result;\n  for (let i = ZERO; i < orderLength; i += ONE) {\n    method = ordinary[methodNames[i]];\n\n    if (isFunction(method)) {\n      result = method.call(ordinary);\n\n      if (isPrimitive(result)) {\n        return result;\n      }\n    }\n  }\n\n  throw new TypeError('No default value');\n};\n\n/**\n * @param {*} object - The object.\n * @param {*} property - The property.\n * @returns {undefined|Function} - The method.\n */\nconst getMethod = function _getMethod(object, property) {\n  const func = object[property];\n\n  if (isNil(func) === false) {\n    if (isFunction(func) === false) {\n      throw new TypeError(`${func} returned for property ${property} of object ${object} is not a function`);\n    }\n\n    return func;\n  }\n\n  return UNDEFINED;\n};\n\n/**\n * Get the hint.\n *\n * @param {*} value - The value to compare.\n * @param {boolean} supplied - Was a value supplied.\n * @returns {string} - The hint string.\n */\nconst getHint = function getHint(value, supplied) {\n  if (supplied) {\n    if (value === StringCtr) {\n      return STRING;\n    }\n\n    if (value === NumberCtr) {\n      return NUMBER;\n    }\n  }\n\n  return DEFAULT;\n};\n\n/**\n * Get the primitive from the exotic.\n *\n * @param {*} value - The exotic.\n * @returns {*} - The primitive.\n */\nconst getExoticToPrim = function getExoticToPrim(value) {\n  if (hasSymbols) {\n    if (symToPrimitive) {\n      return getMethod(value, symToPrimitive);\n    }\n\n    if (isSymbol(value)) {\n      return symValueOf;\n    }\n  }\n\n  return UNDEFINED;\n};\n\n/**\n * This method converts a JavaScript object to a primitive value.\n * Note: When toPrimitive is called with no hint, then it generally behaves as\n * if the hint were Number. However, objects may over-ride this behaviour by\n * defining a @@toPrimitive method. Of the objects defined in this specification\n * only Date objects (see 20.3.4.45) and Symbol objects (see 19.4.3.4) over-ride\n * the default ToPrimitive behaviour. Date objects treat no hint as if the hint\n * were String.\n *\n * @param {*} input - The input to convert.\n * @param {NumberConstructor|StringConstructor} [preferredType] - The preferred type (String or Number).\n * @throws {TypeError} If unable to convert input to a primitive.\n * @returns {string|number} The converted input as a primitive.\n * @see {http://www.ecma-international.org/ecma-262/6.0/#sec-toprimitive}\n */\nexport default function toPrimitive(input, preferredType) {\n  if (isPrimitive(input)) {\n    return input;\n  }\n\n  const hint = getHint(preferredType, arguments.length > ONE);\n  const exoticToPrim = getExoticToPrim(input);\n\n  if (typeof exoticToPrim !== 'undefined') {\n    const result = exoticToPrim.call(input, hint);\n\n    if (isPrimitive(result)) {\n      return result;\n    }\n\n    throw new TypeError('unable to convert exotic object to primitive');\n  }\n\n  const newHint = hint === DEFAULT && (isDate(input) || isSymbol(input)) ? STRING : hint;\n\n  return ordinaryToPrimitive(input, newHint === DEFAULT ? NUMBER : newHint);\n}\n","import hasSymbols from 'has-symbol-support-x';\nimport toPrimitive from 'to-primitive-x';\nimport toStr from 'to-string-x';\n\n/**\n * This method Converts argument to a value that can be used as a property key.\n *\n * @param {*} argument - The argument to convert to a property key.\n * @throws {TypeError} If argument is not a symbol and is not coercible to a string.\n * @returns {string|Symbol} The converted argument.\n */\nexport default function toPropertyKey(argument) {\n  const key = toPrimitive(argument, String);\n\n  return hasSymbols && typeof key === 'symbol' ? key : toStr(key);\n}\n","import toObject from 'to-object-x';\nimport toPropertyKey from 'to-property-key-x';\n\nconst hop = {}.hasOwnProperty;\n\n/**\n * The `hasOwnProperty` method returns a boolean indicating whether\n * the `object` has the specified `property`. Does not attempt to fix known\n * issues in older browsers, but does ES6ify the method.\n *\n * @param {!object} object - The object to test.\n * @throws {TypeError} If object is null or undefined.\n * @param {string|Symbol} property - The name or Symbol of the property to test.\n * @returns {boolean} `true` if the property is set on `object`, else `false`.\n */\nexport default function hasOwnProperty(object, property) {\n  return hop.call(toObject(object), toPropertyKey(property));\n}\n","import toPropertyKey from 'to-property-key-x';\nimport toObject from 'to-object-x';\n\nconst propIsEnumerable = {}.propertyIsEnumerable;\n\n/**\n * This method returns a Boolean indicating whether the specified property is\n * enumerable. Does not attempt to fix bugs in IE<9 or old Opera, otherwise it\n * does ES6ify the method.\n *\n * @param {!object} object - The object on which to test the property.\n * @param {string|Symbol} property - The name of the property to test.\n * @throws {TypeError} If target is null or undefined.\n * @returns {boolean} A Boolean indicating whether the specified property is\n *  enumerable.\n */\nexport default function propertyIsEnumerable(object, property) {\n  return propIsEnumerable.call(toObject(object), toPropertyKey(property));\n}\n","import toObject from 'to-object-x';\nimport toPropertyKey from 'to-property-key-x';\nimport isFalsey from 'is-falsey-x';\nimport attempt from 'attempt-x';\nimport hasSymbolSupport from 'has-symbol-support-x';\nimport owns from 'has-own-property-x';\nimport isPrimitive from 'is-primitive';\nimport isString from 'is-string';\nimport isIndex from 'is-index-x';\nimport propertyIsEnumerable from 'property-is-enumerable-x';\n\n/** @type {ObjectConstructor} */\nconst castObject = {}.constructor;\nconst nativeGOPD = typeof castObject.getOwnPropertyDescriptor === 'function' && castObject.getOwnPropertyDescriptor;\nlet getOPDFallback1;\nlet getOPDFallback2;\n\n// ES5 15.2.3.3\n// http://es5.github.com/#x15.2.3.3\n\nconst doesGOPDWork = function doesGOPDWork(object, prop) {\n  object[toPropertyKey(prop)] = 0;\n  const testResult = attempt(nativeGOPD, object, prop);\n\n  return testResult.threw === false && testResult.value.value === 0;\n};\n\n// check whether getOwnPropertyDescriptor works if it's given. Otherwise, shim partially.\n/**\n * This method returns a property descriptor for an own property (that is,\n * one directly present on an object and not in the object's prototype chain)\n * of a given object.\n *\n * @param {*} object - The object in which to look for the property.\n * @param {*} property - The name of the property whose description is to be retrieved.\n * @returns {object} A property descriptor of the given property if it exists on the object, undefined otherwise.\n */\nlet $getOwnPropertyDescriptor;\n\nif (nativeGOPD) {\n  const doc = typeof document !== 'undefined' && document;\n  const getOPDWorksOnDom = doc ? doesGOPDWork(doc.createElement('div'), 'sentinel') : true;\n\n  if (getOPDWorksOnDom) {\n    const res = attempt(nativeGOPD, castObject('abc'), 1);\n    const worksWithStr = res.threw === false && res.value && res.value.value === 'b';\n\n    if (worksWithStr) {\n      const getOPDWorksOnObject = doesGOPDWork({}, 'sentinel');\n\n      if (getOPDWorksOnObject) {\n        const worksWithPrim = attempt(nativeGOPD, 42, 'name').threw === false;\n        /* eslint-disable-next-line compat/compat */\n        const worksWithObjSym = hasSymbolSupport && doesGOPDWork({}, castObject(Symbol('')));\n\n        if (worksWithObjSym) {\n          if (worksWithPrim) {\n            $getOwnPropertyDescriptor = nativeGOPD;\n          } else {\n            $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(object, property) {\n              return nativeGOPD(toObject(object), property);\n            };\n          }\n        } else if (worksWithPrim) {\n          $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(object, property) {\n            return nativeGOPD(object, toPropertyKey(property));\n          };\n        } else {\n          $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(object, property) {\n            return nativeGOPD(toObject(object), toPropertyKey(property));\n          };\n        }\n      } else {\n        getOPDFallback1 = nativeGOPD;\n      }\n    } else {\n      getOPDFallback2 = nativeGOPD;\n    }\n  }\n}\n\nif (isFalsey($getOwnPropertyDescriptor) || getOPDFallback1 || getOPDFallback2) {\n  const prototypeOfObject = castObject.prototype;\n\n  // If JS engine supports accessors creating shortcuts.\n  let lookupGetter;\n  let lookupSetter;\n  const supportsAccessors = owns(prototypeOfObject, '__defineGetter__');\n\n  if (supportsAccessors) {\n    /* eslint-disable-next-line no-underscore-dangle */\n    const lg = prototypeOfObject.__lookupGetter__;\n    /* eslint-disable-next-line no-underscore-dangle */\n    const ls = prototypeOfObject.__lookupSetter__;\n    lookupGetter = function $lookupGetter(object, property) {\n      return lg.call(object, property);\n    };\n\n    lookupSetter = function $lookupSetter(object, property) {\n      return ls.call(object, property);\n    };\n  }\n\n  $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(object, property) {\n    const obj = toObject(object);\n    const propKey = toPropertyKey(property);\n\n    let result;\n\n    // make a valiant attempt to use the real getOwnPropertyDescriptor for I8's DOM elements.\n    if (getOPDFallback1) {\n      result = attempt.call(castObject, getOPDFallback1, obj, propKey);\n\n      if (result.threw === false) {\n        return result.value;\n      }\n      // try the shim if the real one doesn't work\n    }\n\n    const isStringIndex = isString(obj) && isIndex(propKey, obj.length);\n\n    if (getOPDFallback2 && isStringIndex === false) {\n      result = attempt.call(castObject, getOPDFallback2, obj, propKey);\n\n      if (result.threw === false) {\n        return result.value;\n      }\n      // try the shim if the real one doesn't work\n    }\n\n    /* eslint-disable-next-line no-void */\n    let descriptor = void 0;\n\n    // If object does not owns property return undefined immediately.\n    if (isStringIndex === false && owns(obj, propKey) === false) {\n      return descriptor;\n    }\n\n    // If object has a property then it's for sure `configurable`, and\n    // probably `enumerable`. Detect enumerability though.\n    descriptor = {\n      configurable: isPrimitive(object) === false && isStringIndex === false,\n      enumerable: propertyIsEnumerable(obj, propKey),\n    };\n\n    // If JS engine supports accessor properties then property may be a\n    // getter or setter.\n    if (supportsAccessors) {\n      // Unfortunately `__lookupGetter__` will return a getter even\n      // if object has own non getter property along with a same named\n      // inherited getter. To avoid misbehavior we temporary remove\n      // `__proto__` so that `__lookupGetter__` will return getter only\n      // if it's owned by an object.\n      /* eslint-disable-next-line no-proto */\n      const prototype = obj.__proto__;\n      const notPrototypeOfObject = obj !== prototypeOfObject;\n\n      // avoid recursion problem, breaking in Opera Mini when\n      // Object.getOwnPropertyDescriptor(Object.prototype, 'toString')\n      // or any other Object.prototype accessor\n      if (notPrototypeOfObject) {\n        /* eslint-disable-next-line no-proto */\n        obj.__proto__ = prototypeOfObject;\n      }\n\n      const getter = lookupGetter(obj, propKey);\n      const setter = lookupSetter(obj, propKey);\n\n      if (notPrototypeOfObject) {\n        // Once we have getter and setter we can put values back.\n        /* eslint-disable-next-line no-proto */\n        obj.__proto__ = prototype;\n      }\n\n      if (getter || setter) {\n        if (getter) {\n          descriptor.get = getter;\n        }\n\n        if (setter) {\n          descriptor.set = setter;\n        }\n\n        // If it was accessor property we're done and return here\n        // in order to avoid adding `value` to the descriptor.\n        return descriptor;\n      }\n    }\n\n    // If we got this far we know that object has an own property that is\n    // not an accessor so we set it as a value and return descriptor.\n    if (isStringIndex) {\n      descriptor.value = obj.charAt(propKey);\n      descriptor.writable = false;\n    } else {\n      descriptor.value = obj[propKey];\n      descriptor.writable = true;\n    }\n\n    return descriptor;\n  };\n}\n\nconst gOPS = $getOwnPropertyDescriptor;\n\nexport default gOPS;\n"],"sourceRoot":""}